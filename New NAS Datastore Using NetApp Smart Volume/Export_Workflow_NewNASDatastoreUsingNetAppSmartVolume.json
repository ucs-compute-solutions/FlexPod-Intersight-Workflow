[{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Datacenter","Label":"Datacenter","Name":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","InventoryPath"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseDatacenter)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"InventoryPath"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Cluster.","Label":"Cluster","Name":"HypervisorClusterType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","InventoryPath"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseCluster)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"InventoryPath"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Hypervisor Host.","Label":"ESXi Host","Name":"HypervisorHostType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":255,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^(([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\\\\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:)|[a-zA-Z0-9]+([a-zA-Z0-9-._]*[a-zA-Z0-9]))$"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseHost)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Storage capacity.","Label":"Storage Capacity","Name":"StorageCapacityType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Size must be a number (used in conjunction with unit).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Size","Name":"VolumeSize","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":19,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9]{1,19}"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Unit is a string with a single character unit symbol. Valid unit symbols are K, M, G, T, and P representing Bytes, Kilobyte, Megabyte, Gigabyte, Terabyte, and Petabyte respectively, where one Kilobyte equals 1024 Bytes, one Megabyte equals 1048576 Bytes and so on.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Unit","Name":"VolumeUnit","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"KiB","ObjectType":"workflow.EnumEntry","Value":"K"},{"Label":"MiB","ObjectType":"workflow.EnumEntry","Value":"M"},{"Label":"GiB","ObjectType":"workflow.EnumEntry","Value":"G"},{"Label":"TiB","ObjectType":"workflow.EnumEntry","Value":"T"},{"Label":"PiB","ObjectType":"workflow.EnumEntry","Value":"P"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"NetApp storage target device.","Label":"NetApp Storage Target Datatype","Name":"NetAppStorageTargetDataType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"CustomDataTypeProperties":{"ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage target device.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ObjectType"],"DisplayAttributes":["Name","ManagementAddress"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/storage/NetAppClusters?$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["storage.NetAppCluster"]}],"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"NetApp storage virtual machine name.","Label":"NetApp Storage Virtual Machine","Name":"NetAppStorageVirtualMachineNameType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine","Name":"StorageVirtualMachineName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":47,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9A-z_][-A-z0-9._]*"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppStorageVms?$orderby=Name&$select=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"NetApp export policy name.","Label":"NetApp Export Policy Name","Name":"NetAppExportPolicyNameType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Export policy name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Name","Name":"ExportPolicyName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppExportPolicies?$apply=groupby((Name),aggregate($count as count))&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"NetApp volume name.","Label":"NetApp Volume","Name":"NetAppVolumeNameType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Name","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":197,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[A-z][_A-z0-9]*"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppVolumes?$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"NAS Volume Access Permissions.","Label":"NetApp NAS Volume Access Permissions","Name":"NetAppVolumeNfsOrCifsAccessPermissionsType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"ExportViaNfs","EnableParameters":["CreateExportPolicy"],"Name":"show-exportpolicy","ObjectType":"workflow.ParameterSet","Value":"true"},{"Condition":"eq","ControlParameter":"CreateExportPolicy","EnableParameters":["ExistingExportPolicy"],"Name":"show-existing-exportpolicy","ObjectType":"workflow.ParameterSet","Value":"false"},{"Condition":"eq","ControlParameter":"CreateExportPolicy","EnableParameters":["ClientMatchList"],"Name":"show-create-exportpolicy","ObjectType":"workflow.ParameterSet","Value":"true"},{"Condition":"eq","ControlParameter":"ShareViaSmbCifs","EnableParameters":["UserOrGroup","CifsAccess"],"Name":"show-accesscontrols","ObjectType":"workflow.ParameterSet","Value":"true"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"If selected, export via NFS. Either create a new export policy by providing the client match string(s) or select an existing export policy.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export via NFS","Name":"ExportViaNfs","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"If selected, create a new export policy by providing the client match string(s) or unselect to use an existing export policy. The new export policy will be created using nfs for access policy and sys for read-only access rule, read-write access rule, and superuser security type.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"New Export Policy","Name":"CreateExportPolicy","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The match string(s) specifying the client(s) to grant access to in an export policy rule.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Client Match","Max":500,"Min":1,"Name":"ClientMatchList","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Select existing export policy.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy","Name":"ExistingExportPolicy","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppExportPolicyNameType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"If selected, share via SMB-CIFS.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Share via SMB-CIFS","Name":"ShareViaSmbCifs","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The user or group that will be granted access.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"User or Group","Name":"UserOrGroup","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The level of access granted to the user or group.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"CIFS Access","Name":"CifsAccess","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Change","ObjectType":"workflow.EnumEntry","Value":"change"},{"Label":"Full Control","ObjectType":"workflow.EnumEntry","Value":"full_control"},{"Label":"No Access","ObjectType":"workflow.EnumEntry","Value":"no_access"},{"Label":"Read","ObjectType":"workflow.EnumEntry","Value":"read"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"An IPv4 address represented in dot decimal notation, such as '192.168.1.6'.","Label":"IPv4 Address","Name":"IpV4AddressType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"An IPv4 address represented in dot decimal notation, such as '192.168.1.6'.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"IPv4 Address","Name":"IpV4Address","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints","Regex":"^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Remove a NAS volume with storage virtual machine name and volume name as inputs. This will unmount the volume disrupting clients accessing the data, take the volume offline, and delete the associated data, Snapshot copies, and objects in the volume. On successful execution, the deleted volume name is generated as output.","Label":"Remove NetApp NAS Smart Volume","Name":"RemoveNetAppNasSmartVolume","ObjectType":"workflow.TaskDefinition","Properties":{"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppStorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine","Name":"StorageVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppStorageVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Volume name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume","Name":"VolumeName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppVolumeNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume","Name":"VolumeName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppVolumeNameType","ObjectType":"workflow.CustomDataProperty"}}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Storage"},{"Key":"subcategory","Value":"NetApp"},{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":2},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Create a NAS volume with volume name, storage virtual machine name, volume size, performance service level, and export policy or access controls as the inputs. On successful execution, the volume name, volume capacity, and export policy id are generated as outputs.","Label":"New NetApp NAS Smart Volume","Name":"NewNetAppNasSmartVolume","ObjectType":"workflow.TaskDefinition","Properties":{"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppStorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine","Name":"StorageVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppStorageVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Volume name can be between 1 and 197 characters long. The name should begin with a letter and only \"a\" to \"z\", \"A\" to \"Z\", \"0\" to \"9\", and underscore (_) are allowed.","DisplayMeta":{"InventorySelector":false,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Name","Name":"VolumeName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppVolumeNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"If selected, create a FlexGroup volume.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Distribute volume data across cluster","Name":"FlexGroup","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Volume size and unit.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Capacity","Name":"VolumeCapacity","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageCapacityType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Performance service levels represent the performance expectations of the clients or applications using the storage system. The selection of a performance service level indicates the location of the new storage in the cluster and the QoS policy assigned to the storage. Value is used for applications for which throughput and capacity are more important than latency. Performance is used for applications with modest performance needs and latency. Extreme is used for applications that expect the lowest latency and highest performance.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Performance Service Level","Name":"PerformanceServiceLevel","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"None","ObjectType":"workflow.EnumEntry","Value":"none"},{"Label":"Performance","ObjectType":"workflow.EnumEntry","Value":"performance"},{"Label":"Value","ObjectType":"workflow.EnumEntry","Value":"value"},{"Label":"Extreme","ObjectType":"workflow.EnumEntry","Value":"extreme"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"NAS volume access permissions.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Access Permissions","Name":"AccessPermissions","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppVolumeNfsOrCifsAccessPermissionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"If selected, enable local snapshot copies using the default policy.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Enable Local Snapshot Copies","Name":"LocalSnapshotCopies","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume","Name":"VolumeName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppVolumeNameType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Capacity","Name":"VolumeCapacity","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageCapacityType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Id","Name":"ExportPolicyId","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Name","Name":"ExportPolicyName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Mount Path","Name":"MountPath","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NFS Interface IP Address","Name":"NfsInterfaceIpAddress","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"}}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":30,"TimeoutPolicy":"Retry"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"Remove a NAS volume.","InputParameters":{"StorageDevice":"${task.input.StorageDevice}","StorageVirtualMachineName":"${task.input.StorageVirtualMachineName}","VolumeName":"${task.output.VolumeName}"},"Name":"RemoveNetAppNasSmartVolume","ObjectType":"workflow.RollbackTask","Version":2}],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Storage"},{"Key":"subcategory","Value":"NetApp"},{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":5},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Type and version of datastore.","Label":"Types of Datastore","Name":"HypervisorDatastoreVersionsType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"VMFSVersion","EnableParameters":["Disk"],"Name":"rule-1","ObjectType":"workflow.ParameterSet","Value":"VMFS5"},{"Condition":"eq","ControlParameter":"VMFSVersion","EnableParameters":["Disk"],"Name":"rule-2","ObjectType":"workflow.ParameterSet","Value":"VMFS6"},{"Condition":"eq","ControlParameter":"VMFSVersion","EnableParameters":["RemotePath","RemoteHostNames","AccessMode"],"Name":"rule-3","ObjectType":"workflow.ParameterSet","Value":"NFS"},{"Condition":"eq","ControlParameter":"VMFSVersion","EnableParameters":["RemotePath","RemoteHostNames","AccessMode","SecurityType"],"Name":"rule-4","ObjectType":"workflow.ParameterSet","Value":"NFS41"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type and version of datastore","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Radio"},"Label":"Type of Datastore","Name":"VMFSVersion","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"VMFS-6","ObjectType":"workflow.EnumEntry","Value":"VMFS6"},{"Label":"VMFS-5","ObjectType":"workflow.EnumEntry","Value":"VMFS5"},{"Label":"NFS3","ObjectType":"workflow.EnumEntry","Value":"NFS"},{"Label":"NFS4.1","ObjectType":"workflow.EnumEntry","Value":"NFS41"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Canonical disk (also called NaaId) that backs the datastore (example: 6cc167e972c4928023401a54db995b66).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk","Name":"Disk","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The remote path of the NFS mount point.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Remote Path","Name":"RemotePath","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The hostnames or IP addresses of remote NFS server. In case of NFS v4.1 this may have multiple entries.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NFS Server Address","Max":32,"Min":1,"Name":"RemoteHostNames","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Access mode for the NFS server. Select read-only if volume is exported as read-only.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Radio"},"Label":"Access Mode","Name":"AccessMode","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Read Write","ObjectType":"workflow.EnumEntry","Value":"readWrite"},{"Label":"Read Only","ObjectType":"workflow.EnumEntry","Value":"readOnly"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Security for the NFS datastore. Default is the basic AUTH_SYS security.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Radio"},"Label":"Security type","Name":"SecurityType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Default Security","ObjectType":"workflow.EnumEntry","Value":"AUTH_SYS"},{"Label":"Kerberos for authentication only","ObjectType":"workflow.EnumEntry","Value":"SEC_KRB5"},{"Label":"Kerberos with Data Integrity","ObjectType":"workflow.EnumEntry","Value":"SEC_KRB5I"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Datastore.","Label":"Datastore","Name":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","InventoryPath"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseDatastore)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"InventoryPath"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Remove datastore from selected hypervisor. Requires datacenter, cluster (or host), datastore as inputs. On successful execution, the datastore name, NaaId of the deleted datastore, and the LUN number are generated as outputs.","Label":"Remove Hypervisor Datastore","Name":"RemoveHypervisorDatastore","ObjectType":"workflow.TaskDefinition","Properties":{"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore is hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore is hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the datastore to be removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Disk associated with the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk name","Name":"NAAId","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"LUN number of the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Number","Name":"LUNNumber","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":150,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Virtualization"},{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":2},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Create a new datastore on selected hypervisor. Requires datacenter, cluster (or host), and datastore. For VMFS, the canonical disk name, and VMFS version inputs are needed. For NFS, remote server and mount path, and NFS version are needed. On successful execution, the datastore name, disk name, VMFS version, and datacenter name are generated as outputs.","Label":"New Hypervisor Datastore","Name":"NewHypervisorDatastore","ObjectType":"workflow.TaskDefinition","Properties":{"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name for the new datastore, limited to 42 characters.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints","Regex":"^.{1,42}$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type and version of the new datastore. Minimum datastore size: VMFS 5 - 1.3GB, VMFS 6 - 2GB. Kerberos support is enabled in NFS4.1 only.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Type of Datastore","Name":"DatastoreVersion","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreVersionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the newly created datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"VMFS Version","Name":"VMFSVersion","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore Type","Name":"DatastoreType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Disk identity of the newly created datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk","Name":"Disk","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":300,"TimeoutPolicy":"Retry"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"Remove Hypervisor Datastore ","InputParameters":{"Cluster":"${task.input.Cluster}","Datacenter":"${task.input.Datacenter}","Datastore":"${task.input.Datastore}","Host":"${task.input.Host}","Vcenter":"${task.input.Vcenter}"},"Name":"RemoveHypervisorDatastore","ObjectType":"workflow.RollbackTask","Version":2}],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Virtualization"},{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.WorkflowDefinition","DefaultVersion":true,"Description":"Create a NAS datastore. A volume with the same name as the datastore is created using the New NetApp NAS Smart Volume task.","InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name for the new datastore, limited to 42 characters. It should begin with a letter and only \"a\" to \"z\", \"A\" to \"Z\", \"0\" to \"9\", underscore (_) are allowed. The volume created will be named the same as the datastore name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore Name","Name":"Datastore","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":42,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^[A-z][_A-z0-9]*$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datastore/volume size and unit.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore Capacity","Name":"VolumeCapacity","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageCapacityType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore Type","Name":"DatastoreType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"NFS3","ObjectType":"workflow.EnumEntry","Value":"NFS"},{"Label":"NFS4.1","ObjectType":"workflow.EnumEntry","Value":"NFS41"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Access mode for the NFS server. Select read-only if volume is exported as read-only.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Radio"},"Label":"Access Mode","Name":"AccessMode","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Read Write","ObjectType":"workflow.EnumEntry","Value":"readWrite"},{"Label":"Read Only","ObjectType":"workflow.EnumEntry","Value":"readOnly"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"AUTH_SYS"},"Description":"Security for the NFS datastore. Kerberos support is enabled in NFS 4.1 only. Default is the basic AUTH_SYS security.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Radio"},"Label":"Security Type","Name":"SecurityType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Default Security","ObjectType":"workflow.EnumEntry","Value":"AUTH_SYS"},{"Label":"Kerberos for authentication only","ObjectType":"workflow.EnumEntry","Value":"SEC_KRB5"},{"Label":"Kerberos with Data Integrity","ObjectType":"workflow.EnumEntry","Value":"SEC_KRB5I"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppStorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine","Name":"StorageVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppStorageVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"If selected, create a FlexGroup volume.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Distribute volume data across cluster","Name":"FlexGroup","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"none"},"Description":"Performance service levels represent the performance expectations of the clients or applications using the storage system. The selection of a performance service level indicates the location of the new storage in the storage device and the QoS policy assigned to the storage. Value is used for applications for which throughput and capacity are more important than latency. Performance is used for applications with modest performance needs and latency. Extreme is used for applications that expect the lowest latency and highest performance. Note: If the selected performance service level is not valid for the storage platform, the task will fail with an error message. Use the ‘None’ option if the storage virtual machine already has a QoS policy group. ","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Performance Service Level","Name":"PerformanceServiceLevel","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"None","ObjectType":"workflow.EnumEntry","Value":"none"},{"Label":"Performance","ObjectType":"workflow.EnumEntry","Value":"performance"},{"Label":"Value","ObjectType":"workflow.EnumEntry","Value":"value"},{"Label":"Extreme","ObjectType":"workflow.EnumEntry","Value":"extreme"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"If selected, create a new export policy by providing the client match or unselect to use an existing export policy.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"New Export Policy","Name":"NewExportPolicy","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Match string specifying the client or clients to grant access to in the export policy rule.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Client Match","Name":"ClientMatch","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Select existing export policy.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy","Name":"ExistingExportPolicy","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppExportPolicyNameType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":true},"Description":"If selected, enable local snapshot copies using the default policy.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Enable Local Snapshot Copies","Name":"LocalSnapshotCopies","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}}],"InputParameterSet":[{"Condition":"eq","ControlParameter":"NewExportPolicy","EnableParameters":["ClientMatch"],"Name":"NewExportPolicyParams","ObjectType":"workflow.ParameterSet","Value":"true"},{"Condition":"eq","ControlParameter":"NewExportPolicy","EnableParameters":["ExistingExportPolicy"],"Name":"ExistingExportPolicyParams","ObjectType":"workflow.ParameterSet","Value":"false"}],"Label":"New NAS Datastore Using NetApp Smart Volume","Name":"NewNASDatastoreUsingNetAppSmartVolume","ObjectType":"workflow.WorkflowDefinition","OutputDefinition":[],"Properties":{"ObjectType":"workflow.WorkflowProperties","SupportStatus":"Supported"},"SharedScope":"user","Tags":[{"Key":"category","Value":"Virtualization"}],"Tasks":[{"Name":"StartTask","NextTask":"NewNetAppNasSmartVolume","ObjectType":"workflow.StartTask"},{"CatalogMoid":"shared","Description":"Create a NAS volume with volume name, storage virtual machine name, volume size, performance service level, and export policy or access controls as the inputs. On successful execution, the volume name, volume capacity, and export policy id are generated as outputs.","InputParameters":{"AccessPermissions":{"ClientMatchList":"{{if .global.workflow.input.NewExportPolicy}}{{ .global.workflow.input.ClientMatch}}{{end}}","CreateExportPolicy":"{{.global.workflow.input.NewExportPolicy}}","ExistingExportPolicy":"{{if not .global.workflow.input.NewExportPolicy}}{{.global.workflow.input.ExistingExportPolicy}}{{end}}","ExportViaNfs":true},"FlexGroup":"${workflow.input.FlexGroup}","LocalSnapshotCopies":"${workflow.input.LocalSnapshotCopies}","PerformanceServiceLevel":"${workflow.input.PerformanceServiceLevel}","StorageDevice":"${workflow.input.StorageDevice}","StorageVirtualMachineName":"${workflow.input.StorageVirtualMachineName}","VolumeCapacity":"${workflow.input.VolumeCapacity}","VolumeName":"${workflow.input.Datastore}"},"Label":"New NetApp NAS Smart Volume","Name":"NewNetAppNasSmartVolume","ObjectType":"workflow.WorkerTask","OnSuccess":"NewHypervisorDatastore","TaskDefinitionName":"NewNetAppNasSmartVolume","Version":5},{"CatalogMoid":"shared","Description":"Create a new datastore on selected hypervisor. Requires datacenter, cluster (or host), and datastore. For VMFS, the canonical disk name, and VMFS version inputs are needed. For NFS, remote server and mount path, and NFS version are needed. On successful execution, the datastore name, disk name, VMFS version, and datacenter name are generated as outputs.","InputParameters":{"Cluster":"${workflow.input.Cluster}","Datacenter":"${workflow.input.Datacenter}","Datastore":"${workflow.input.Datastore}","DatastoreVersion":{"AccessMode":"{{ .global.workflow.input.AccessMode}}","RemoteHostNames":"{{ .global.NewNetAppNasSmartVolume.output.NfsInterfaceIpAddress }}","RemotePath":"{{ .global.NewNetAppNasSmartVolume.output.MountPath}}","SecurityType":"{{ .global.workflow.input.SecurityType }}","VMFSVersion":"{{ .global.workflow.input.DatastoreType }}"},"Host":"${workflow.input.Host}","Vcenter":"${workflow.input.Vcenter}"},"Label":"New NAS Datastore","Name":"NewHypervisorDatastore","ObjectType":"workflow.WorkerTask","OnSuccess":"SuccessEndTask","TaskDefinitionName":"NewHypervisorDatastore","Version":1},{"Name":"SuccessEndTask","ObjectType":"workflow.SuccessEndTask"},{"Name":"FailureEndTask","ObjectType":"workflow.FailureEndTask"}],"UiInputFilters":[{"Filters":["Array.Moid eq '${StorageDevice.Moid}'"],"Name":"StorageVirtualMachineName","ObjectType":"workflow.UiInputFilter"},{"Filters":["Tenant.Moid eq '${StorageVirtualMachineName.Moid}'"],"Name":"ExistingExportPolicy","ObjectType":"workflow.UiInputFilter"},{"Filters":["RegisteredDevice.Moid eq '${Vcenter.Moid}'"],"Name":"Datacenter","ObjectType":"workflow.UiInputFilter"},{"Filters":["RegisteredDevice.Moid eq '${Vcenter.Moid}'"],"Name":"Cluster","ObjectType":"workflow.UiInputFilter"},{"Filters":["RegisteredDevice.Moid eq '${Vcenter.Moid}'"],"Name":"Host","ObjectType":"workflow.UiInputFilter"}],"UiRenderingData":{"PDModesMeta":{"AccessPermissions.ExistingExportPolicy":"simple","Cluster":"advanced","Datacenter":"advanced","Host":"advanced","StorageVirtualMachineName":"simple"},"Positions":[{"Name":"StartTask","X":262,"Y":80.5},{"Name":"SuccessEndTask","X":262,"Y":354},{"Name":"FailureEndTask","X":402,"Y":354},{"Name":"NewNetAppNasSmartVolume","X":177.11700439453125,"Y":156},{"Name":"NewHypervisorDatastore","X":177,"Y":256}]},"VariableDefinition":[],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/WorkflowDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.ErrorResponseHandler","Name":"NetAppApiErrorResponseHandler","ObjectType":"workflow.ErrorResponseHandler","Parameters":[{"AcceptSingleValue":true,"ComplexType":"Error","ItemType":"complex","Name":"Errors","ObjectType":"content.Parameter","Path":"$","Type":"collection"}],"PlatformType":"NetAppActiveIqUnifiedManager","SharedScope":"shared","Types":[{"Name":"Error","ObjectType":"content.ComplexType","Parameters":[{"ItemType":"simple","Name":"Msg","ObjectType":"content.Parameter","Path":"$.error.message","Type":"simple"},{"ItemType":"simple","Name":"ErrorCode","ObjectType":"content.Parameter","Path":"$.error.code","Type":"simple"}]}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/ErrorResponseHandlers","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetClusterUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID successful.","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ne .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID failed.","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Uuid","ObjectType":"content.Parameter","Path":"$.Uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/storage/NetAppClusters/{{.global.task.input.StorageDevice.Moid}}?$select=Uuid"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppVolumeDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 400) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 501) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ and (eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 200) (not .global.GetNetAppVolumeDetails.output.VolumeUuid) }}","Message":"No volume named '{{.global.task.input.VolumeName}}' found.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ (eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 200) }}","Message":"Volume details retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"SvmUuid","ObjectType":"content.Parameter","Path":"$.records[0].svm.uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AggregateUuid","ObjectType":"content.Parameter","Path":"$.records[0].aggregates[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyId","ObjectType":"content.Parameter","Path":"$.records[0].nas.export_policy.id","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyName","ObjectType":"content.Parameter","Path":"$.records[0].nas.export_policy.name","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?name={{.global.task.input.VolumeName}}&svm.name={{.global.task.input.StorageVirtualMachineName}}&fields=aggregates,nas.export_policy,svm"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppCifsShareCount","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppCifsShareCount.output.HttpStatusCode 400) (le .global.GetNetAppCifsShareCount.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppCifsShareCount.output.Errors}}{{$err := (index .global.GetNetAppCifsShareCount.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppCifsShareCount.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppCifsShareCount.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppCifsShareCount.output.Errors}}{{$err := (index .global.GetNetAppCifsShareCount.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppCifsShareCount.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppCifsShareCount.output.HttpStatusCode 501) (le .global.GetNetAppCifsShareCount.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppCifsShareCount.output.Errors}}{{$err := (index .global.GetNetAppCifsShareCount.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppCifsShareCount.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppCifsShareCount.output.HttpStatusCode 200) }}","Message":"CIFS share count retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NumberOfRecords","ObjectType":"content.Parameter","Path":"$.num_records","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/cifs/shares?svm.uuid={{.global.GetNetAppVolumeDetails.output.SvmUuid}}&name={{.global.task.input.VolumeName}}&volume.name={{.global.task.input.VolumeName}}&return_records=false"},{"Body":"{\"nas.path\": \"\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"PATCH","Name":"UnmountNetAppVolume","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.UnmountNetAppVolume.output.HttpStatusCode 400) (le .global.UnmountNetAppVolume.output.HttpStatusCode 499)}}","Message":"{{if .global.UnmountNetAppVolume.output.Errors}}{{$err := (index .global.UnmountNetAppVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UnmountNetAppVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.UnmountNetAppVolume.output.HttpStatusCode 500)}}","Message":"{{if .global.UnmountNetAppVolume.output.Errors}}{{$err := (index .global.UnmountNetAppVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UnmountNetAppVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.UnmountNetAppVolume.output.HttpStatusCode 501) (le .global.UnmountNetAppVolume.output.HttpStatusCode 599)}}","Message":"{{if .global.UnmountNetAppVolume.output.Errors}}{{$err := (index .global.UnmountNetAppVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UnmountNetAppVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.UnmountNetAppVolume.output.HttpStatusCode 200)}}}","Message":"Job ID created successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobUuid","ObjectType":"content.Parameter","Path":"$.job.uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes/{{.global.GetNetAppVolumeDetails.output.VolumeUuid}}?return_timeout=59"},{"Body":"{}","ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetUnmountJobDetail","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetUnmountJobDetail.output.HttpStatusCode 400) (le .global.GetUnmountJobDetail.output.HttpStatusCode 499)}}","Message":"{{if .global.GetUnmountJobDetail.output.Errors}}{{$err := (index .global.GetUnmountJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetUnmountJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetUnmountJobDetail.output.HttpStatusCode 500)}}","Message":"{{if .global.GetUnmountJobDetail.output.Errors}}{{$err := (index .global.GetUnmountJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetUnmountJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetUnmountJobDetail.output.HttpStatusCode 501) (le .global.GetUnmountJobDetail.output.HttpStatusCode 599)}}","Message":"{{if .global.GetUnmountJobDetail.output.Errors}}{{$err := (index .global.GetUnmountJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetUnmountJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ ContainsString .global.GetUnmountJobDetail.output.JobState \"failure\" }}","Message":"HTTP Status code: {{.global.GetUnmountJobDetail.output.HttpStatusCode}}: {{if .global.GetUnmountJobDetail.output.JobMessage}} Job state: {{.global.GetUnmountJobDetail.output.JobState}} Message: {{.global.GetUnmountJobDetail.output.JobMessage}} CompletedTime: {{.global.GetUnmountJobDetail.output.CompletedTime}} {{ else }} Job status is \"Failed\"{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ ContainsString .global.GetUnmountJobDetail.output.JobState \"paused\" }}","Message":"HTTP Status code: {{.global.GetUnmountJobDetail.output.HttpStatusCode}}: {{if .global.GetUnmountJobDetail.output.JobMessage}} Job state: {{.global.GetUnmountJobDetail.output.JobState}} Message: {{.global.GetUnmountJobDetail.output.JobMessage}} CompletedTime: {{.global.GetUnmountJobDetail.output.CompletedTime}} {{ else }} Job status is \"Paused\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetUnmountJobDetail.output.JobState \"queued\" }}","Message":"HTTP Status code: {{.global.GetUnmountJobDetail.output.HttpStatusCode}}: {{if .global.GetUnmountJobDetail.output.JobMessage}} Job state: {{.global.GetUnmountJobDetail.output.JobState}} Message: {{.global.GetUnmountJobDetail.output.JobMessage}} CompletedTime: {{.global.GetUnmountJobDetail.output.CompletedTime}} {{ else }} Job status is \"Queued\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetUnmountJobDetail.output.JobState \"running\" }}","Message":"HTTP Status code: {{.global.GetUnmountJobDetail.output.HttpStatusCode}}: {{if .global.GetUnmountJobDetail.output.JobMessage}} Job state: {{.global.GetUnmountJobDetail.output.JobState}} Message: {{.global.GetUnmountJobDetail.output.JobMessage}} CompletedTime: {{.global.GetUnmountJobDetail.output.CompletedTime}} {{ else }} Job status is \"Running\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetUnmountJobDetail.output.JobState \"success\" }}","Message":"Volume unmounted successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobState","ObjectType":"content.Parameter","Path":"$.state","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"CompletedTime","ObjectType":"content.Parameter","Path":"$.end_time","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobMessage","ObjectType":"content.Parameter","Path":"$.message","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/cluster/jobs/{{.global.UnmountNetAppVolume.output.JobUuid}}"},{"Body":"{}","ContentType":"json","EndpointRequestType":"Internal","Method":"DELETE","Name":"RemoveVolume","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.RemoveVolume.output.HttpStatusCode 400) (le .global.RemoveVolume.output.HttpStatusCode 499)}}","Message":"{{if .global.RemoveVolume.output.Errors}}{{$err := (index .global.RemoveVolume.output.Errors 0)}}{{if (index $err \"\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.RemoveVolume.output.HttpStatusCode 500)}}","Message":"{{if .global.RemoveVolume.output.Errors}}{{$err := (index .global.RemoveVolume.output.Errors 0)}}{{if (index $err \"\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.RemoveVolume.output.HttpStatusCode 501) (le .global.RemoveVolume.output.HttpStatusCode 599)}}","Message":"{{if .global.RemoveVolume.output.Errors}}{{$err := (index .global.RemoveVolume.output.Errors 0)}}{{if (index $err \"\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.RemoveVolume.output.HttpStatusCode 202) }}","Message":"Job ID created successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobUuid","ObjectType":"content.Parameter","Path":"$.job.uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes/{{.global.GetNetAppVolumeDetails.output.VolumeUuid}}?return_timeout=59"},{"Body":"{}","ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetJobDetail","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 400) (le .global.GetJobDetail.output.HttpStatusCode 499)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetJobDetail.output.HttpStatusCode 500)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 501) (le .global.GetJobDetail.output.HttpStatusCode 599)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Failed\"{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"paused\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Paused\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"queued\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Queued\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"running\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Running\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"success\" }}","Message":"Volume removed successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobState","ObjectType":"content.Parameter","Path":"$.state","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"CompletedTime","ObjectType":"content.Parameter","Path":"$.end_time","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobMessage","ObjectType":"content.Parameter","Path":"$.message","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/cluster/jobs/{{.global.RemoveVolume.output.JobUuid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppVolumeCount","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppVolumeCount.output.HttpStatusCode 400) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 501) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 200) }}","Message":"Volume count retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NumberOfRecords","ObjectType":"content.Parameter","Path":"$.num_records","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?nas.export_policy.name={{.global.GetNetAppVolumeDetails.output.ExportPolicyName}}&svm.name={{.global.task.input.StorageVirtualMachineName}}&return_records=false"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppExportPolicyCount","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppExportPolicyCount.output.HttpStatusCode 400) (le .global.GetNetAppExportPolicyCount.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppExportPolicyCount.output.Errors}}{{$err := (index .global.GetNetAppExportPolicyCount.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicyCount.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppExportPolicyCount.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppExportPolicyCount.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicyCount.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppExportPolicyCount.output.HttpStatusCode 501) (le .global.GetNetAppExportPolicyCount.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppExportPolicyCount.output.Errors}}{{$err := (index .global.GetNetAppExportPolicyCount.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicyCount.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppExportPolicyCount.output.HttpStatusCode 200) }}","Message":"Export policy count retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NumberOfRecords","ObjectType":"content.Parameter","Path":"$.num_records","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/nfs/export-policies?name={{.global.GetNetAppVolumeDetails.output.ExportPolicyName}}&svm.name={{.global.task.input.StorageVirtualMachineName}}&return_records=false"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"DELETE","Name":"RemoveNetAppExportPolicy","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.RemoveNetAppExportPolicy.output.HttpStatusCode 400)  (le .global.RemoveNetAppExportPolicy.output.HttpStatusCode 499)}}","Message":"{{if .global.RemoveNetAppExportPolicy.output.Errors}}{{$err := (index .global.RemoveNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveNetAppExportPolicy.output.HttpStatusMsg}}{{end}} /api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/nfs/export-policies/{{Ftoi .global.GetNetAppVolumeDetails.output.ExportPolicyId}} {{.global.GetNetAppVolumeCount.output.NumberOfRecords}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.RemoveNetAppExportPolicy.output.HttpStatusCode 500)}}","Message":"{{if .global.RemoveNetAppExportPolicy.output.Errors}}{{$err := (index .global.RemoveNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.RemoveNetAppExportPolicy.output.HttpStatusCode 501)  (le .global.RemoveNetAppExportPolicy.output.HttpStatusCode 599)}}","Message":"{{if .global.RemoveNetAppExportPolicy.output.Errors}}{{$err := (index .global.RemoveNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.RemoveNetAppExportPolicy.output.HttpStatusCode 200)}}","Message":"Export policy removed successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","SkipOnCondition":"{{if or (gt (.global.GetNetAppVolumeCount.output.NumberOfRecords|Atoi) 0) (eq (.global.GetNetAppExportPolicyCount.output.NumberOfRecords|Atoi) 0) }} true {{end}}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/nfs/export-policies/{{Ftoi .global.GetNetAppVolumeDetails.output.ExportPolicyId}}"},{"Body":"{\"Type\":\"storage.NetAppCluster\",\"Queries\": [{\"Uuid\": \"{{.global.GetClusterUuid.output.Uuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateClusterInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateClusterInventory.output.HttpStatusCode 200}}","Message":"Updated cluster after volume removal.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateClusterInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateClusterInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppAggregate\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppVolumeDetails.output.AggregateUuid}}\",  \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateAggregateInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateAggregateInventory.output.HttpStatusCode 200}}","Message":"Updated aggregate after volume removal.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateAggregateInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateAggregateInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppVolume\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppVolumeDetails.output.VolumeUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateVolumeInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"Volume removed successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateVolumeInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppExportPolicy\",\"Queries\": [{\"PolicyId\": \"{{Ftoi .global.GetNetAppVolumeDetails.output.ExportPolicyId}}\",\"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateExportPolicyInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateExportPolicyInventory.output.HttpStatusCode 200}}","Message":"Volume{{if (eq (.global.GetNetAppVolumeCount.output.NumberOfRecords|Atoi) 0) }} and export policy{{end}} removed successfully.","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ne .global.UpdateExportPolicyInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateExportPolicyInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppCifsShare\",\"Queries\": [{\"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\", \"SvmUuid\": \"{{.global.GetNetAppVolumeDetails.output.SvmUuid}}\", \"Name\": \"{{.global.task.input.VolumeName}}\" }], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateCifsShareInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateCifsShareInventory.output.HttpStatusCode 200}}","Message":"Volume{{if (eq (.global.GetNetAppVolumeCount.output.NumberOfRecords|Atoi) 0) }}{{if (eq (.global.GetNetAppCifsShareCount.output.NumberOfRecords|Atoi) 1) }},{{else}} and{{end}} export policy{{end}}{{if (eq (.global.GetNetAppCifsShareCount.output.NumberOfRecords|Atoi) 1) }} and CIFS share{{end}} removed successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateCifsShareInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateCifsShareInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","SkipOnCondition":"{{eq (.global.GetNetAppCifsShareCount.output.NumberOfRecords|Atoi) 0}}","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.NetAppCluster"}},"Description":"Remove a NAS volume.","ErrorResponseHandler":{"ObjectType":"workflow.ErrorResponseHandler","Selector":"Name eq \"NetAppApiErrorResponseHandler\""},"Name":"RemoveNetAppNasSmartVolume","ObjectType":"workflow.BatchApiExecutor","Output":{"VolumeName":"{{.global.task.input.VolumeName}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{if ne .global.task.input.StorageDevice.ObjectType \"storage.NetAppCluster\"}} true {{end}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveNetAppNasSmartVolume\" and Version eq 2"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetClusterUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID successful.","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ne .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID failed.","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Uuid","ObjectType":"content.Parameter","Path":"$.Uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/storage/NetAppClusters/{{.global.task.input.StorageDevice.Moid}}?$select=Uuid"},{"Body":"{\"name\": \"{{.global.task.input.VolumeName}}\", \"smart_container\": true, \"svm\": {\"name\": \"{{.global.task.input.StorageVirtualMachineName}}\"}, \"nas\": { \"protection_type\": { \"local_policy\": {{if .global.task.input.LocalSnapshotCopies }} \"default\" {{else}} \"none\" {{end}} }, {{if index .global.task.input.AccessPermissions \"CreateExportPolicy\" }} \"nfs_access\": [ {{range $index, $client:=.global.task.input.AccessPermissions.ClientMatchList}}{{if $index}},{{end}} { \"access\": \"rw\", \"host\": \"{{$client}}\"} {{end}} ], {{else}} \"nfs_access\": [], {{end}} {{if index .global.task.input.AccessPermissions \"ShareViaSmbCifs\"}} \"cifs_access\": [{\"access\": \"{{.global.task.input.AccessPermissions.CifsAccess}}\", \"user_or_group\": \"{{.global.task.input.AccessPermissions.UserOrGroup}}\"}], {{else}} \"cifs_access\": [], {{end}} \"application_components\": [{\"name\": \"{{.global.task.input.VolumeName}}\", \"scale_out\": \"{{.global.task.input.FlexGroup}}\", \"total_size\": \"{{.global.task.input.VolumeCapacity.VolumeSize}}{{.global.task.input.VolumeCapacity.VolumeUnit}}\", \"share_count\": 1, {{if eq .global.task.input.PerformanceServiceLevel \"none\"}} \"qos\": {\"policy\": {\"name\": \"none\"}} {{else}} \"storage_service\": {\"name\": \"{{.global.task.input.PerformanceServiceLevel}}\"} {{end}} {{if index .global.task.input.AccessPermissions \"ExistingExportPolicy\" }} {{if .global.task.input.AccessPermissions.ExistingExportPolicy }}, \"export_policy\": {\"name\": \"{{.global.task.input.AccessPermissions.ExistingExportPolicy}}\"} {{end}} {{end}} }]}}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewCreateVolume","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.NewCreateVolume.output.HttpStatusCode 400) (le .global.NewCreateVolume.output.HttpStatusCode 499)}}","Message":"{{if .global.NewCreateVolume.output.Errors}}{{$err := (index .global.NewCreateVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewCreateVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.NewCreateVolume.output.HttpStatusCode 500)}}","Message":"{{if .global.NewCreateVolume.output.Errors}}{{$err := (index .global.NewCreateVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewCreateVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.NewCreateVolume.output.HttpStatusCode 501) (le .global.NewCreateVolume.output.HttpStatusCode 599)}}","Message":"{{if .global.NewCreateVolume.output.Errors}}{{$err := (index .global.NewCreateVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewCreateVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.NewCreateVolume.output.HttpStatusCode 202) }}","Message":"Job ID created successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobUuid","ObjectType":"content.Parameter","Path":"$.job.uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/application/applications?return_timeout=59"},{"Body":"{}","ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetJobDetail","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 400)  (le .global.GetJobDetail.output.HttpStatusCode 499)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetJobDetail.output.HttpStatusCode 500)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 501)  (le .global.GetJobDetail.output.HttpStatusCode 599)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Failed\"{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"paused\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Paused\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"queued\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Queued\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"running\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Running\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"success\" }}","Message":"Job status received successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobState","ObjectType":"content.Parameter","Path":"$.state","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"CompletedTime","ObjectType":"content.Parameter","Path":"$.end_time","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobMessage","ObjectType":"content.Parameter","Path":"$.message","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/cluster/jobs/{{.global.NewCreateVolume.output.JobUuid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"CheckVolumeMounted","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.CheckVolumeMounted.output.HttpStatusCode 400) (le .global.CheckVolumeMounted.output.HttpStatusCode 499)}}","Message":"{{if .global.CheckVolumeMounted.output.Errors}}{{$err := (index .global.CheckVolumeMounted.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.CheckVolumeMounted.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.CheckVolumeMounted.output.HttpStatusCode 500)}}","Message":"{{if .global.CheckVolumeMounted.output.Errors}}{{$err := (index .global.CheckVolumeMounted.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.CheckVolumeMounted.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.CheckVolumeMounted.output.HttpStatusCode 501) (le .global.CheckVolumeMounted.output.HttpStatusCode 599)}}","Message":"{{if .global.CheckVolumeMounted.output.Errors}}{{$err := (index .global.CheckVolumeMounted.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.CheckVolumeMounted.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.CheckVolumeMounted.output.HttpStatusCode 200) }}","Message":"NAS volume retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NumRecords","ObjectType":"content.Parameter","Path":"$.num_records","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?name={{.global.task.input.VolumeName}}&svm.name={{.global.task.input.StorageVirtualMachineName}}&nas.path=!null&return_records=false"},{"Body":"{ {{if (eq (.global.CheckVolumeMounted.output.NumRecords | Atoi) 0)}}\"nas\": { \"path\": \"/{{.global.task.input.VolumeName}}\"},{{end}} \"space\": { \"snapshot\": { \"reserve_percent\": {{if .global.task.input.LocalSnapshotCopies}}5{{else}}0{{end}} } } }","ContentType":"json","EndpointRequestType":"Internal","Method":"PATCH","Name":"UpdateSnapshotReservePercent","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.UpdateSnapshotReservePercent.output.HttpStatusCode 400) (le .global.UpdateSnapshotReservePercent.output.HttpStatusCode 499)}}","Message":"{{if .global.UpdateSnapshotReservePercent.output.Errors}}{{$err := (index .global.UpdateSnapshotReservePercent.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateSnapshotReservePercent.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.UpdateSnapshotReservePercent.output.HttpStatusCode 500)}}","Message":"{{if .global.UpdateSnapshotReservePercent.output.Errors}}{{$err := (index .global.UpdateSnapshotReservePercent.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateSnapshotReservePercent.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.UpdateSnapshotReservePercent.output.HttpStatusCode 501) (le .global.UpdateSnapshotReservePercent.output.HttpStatusCode 599)}}","Message":"{{if .global.UpdateSnapshotReservePercent.output.Errors}}{{$err := (index .global.UpdateSnapshotReservePercent.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateSnapshotReservePercent.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.UpdateSnapshotReservePercent.output.HttpStatusCode 200)}}","Message":"Updated snapshot reserve percent for the volume.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?name={{.global.task.input.VolumeName}}&svm.name={{.global.task.input.StorageVirtualMachineName}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNumLoadSharingMirrors","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNumLoadSharingMirrors.output.HttpStatusCode 400) (le .global.GetNumLoadSharingMirrors.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNumLoadSharingMirrors.output.Errors}}{{$err := (index .global.GetNumLoadSharingMirrors.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNumLoadSharingMirrors.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNumLoadSharingMirrors.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNumLoadSharingMirrors.output.Errors}}{{$err := (index .global.GetNumLoadSharingMirrors.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNumLoadSharingMirrors.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNumLoadSharingMirrors.output.HttpStatusCode 501) (le .global.GetNumLoadSharingMirrors.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNumLoadSharingMirrors.output.Errors}}{{$err := (index .global.GetNumLoadSharingMirrors.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNumLoadSharingMirrors.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNumLoadSharingMirrors.output.HttpStatusCode 200) }}","Message":"Number of load-sharing mirrors retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NumLoadSharingVolumes","ObjectType":"content.Parameter","Path":"$.num_records","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?svm.name={{.global.task.input.StorageVirtualMachineName}}&type=ls&return_records=false"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppStorageVmRootVolumeDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 400) (le .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppStorageVmRootVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmRootVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppStorageVmRootVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmRootVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 501) (le .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppStorageVmRootVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmRootVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 200) }}","Message":"Storage virtual machine root volume retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeName","ObjectType":"content.Parameter","Path":"$.records[0].name","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{eq (.global.GetNumLoadSharingMirrors.output.NumLoadSharingVolumes | Atoi) 0}}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?svm.name={{.global.task.input.StorageVirtualMachineName}}&is_svm_root=true"},{"Body":"{\"source-path\":\"{{.global.task.input.StorageVirtualMachineName}}:{{.global.GetNetAppStorageVmRootVolumeDetails.output.VolumeName}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateMirrors","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.UpdateMirrors.output.HttpStatusCode 400) (le .global.UpdateMirrors.output.HttpStatusCode 499)}}","Message":"{{if .global.UpdateMirrors.output.Errors}}{{$err := (index .global.UpdateMirrors.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateMirrors.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.UpdateMirrors.output.HttpStatusCode 500)}}","Message":"{{if .global.UpdateMirrors.output.Errors}}{{$err := (index .global.UpdateMirrors.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateMirrors.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.UpdateMirrors.output.HttpStatusCode 501) (le .global.UpdateMirrors.output.HttpStatusCode 599)}}","Message":"{{if .global.UpdateMirrors.output.Errors}}{{$err := (index .global.UpdateMirrors.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateMirrors.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.UpdateMirrors.output.HttpStatusCode 200) }}","Message":"Job ID created successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobUuid","ObjectType":"content.Parameter","Path":"$.job.uuid","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{eq (.global.GetNumLoadSharingMirrors.output.NumLoadSharingVolumes | Atoi) 0}}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/private/cli/snapmirror/update-ls-set"},{"Body":"{}","ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetUpdateJobDetail","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetUpdateJobDetail.output.HttpStatusCode 400)  (le .global.GetUpdateJobDetail.output.HttpStatusCode 499)}}","Message":"{{if .global.GetUpdateJobDetail.output.Errors}}{{$err := (index .global.GetUpdateJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetUpdateJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{(eq .global.GetUpdateJobDetail.output.HttpStatusCode 500)}}","Message":"{{if .global.GetUpdateJobDetail.output.Errors}}{{$err := (index .global.GetUpdateJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetUpdateJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetUpdateJobDetail.output.HttpStatusCode 501)  (le .global.GetUpdateJobDetail.output.HttpStatusCode 599)}}","Message":"{{if .global.GetUpdateJobDetail.output.Errors}}{{$err := (index .global.GetUpdateJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetUpdateJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ ContainsString .global.GetUpdateJobDetail.output.JobState \"failure\" }}","Message":"HTTP Status code: {{.global.GetUpdateJobDetail.output.HttpStatusCode}}: {{if .global.GetUpdateJobDetail.output.JobMessage}} Job state: {{.global.GetUpdateJobDetail.output.JobState}} Message: {{.global.GetUpdateJobDetail.output.JobMessage}} CompletedTime: {{.global.GetUpdateJobDetail.output.CompletedTime}} {{ else }} Job status is \"Failed\"{{end}}","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ ContainsString .global.GetUpdateJobDetail.output.JobState \"paused\" }}","Message":"HTTP Status code: {{.global.GetUpdateJobDetail.output.HttpStatusCode}}: {{if .global.GetUpdateJobDetail.output.JobMessage}} Job state: {{.global.GetUpdateJobDetail.output.JobState}} Message: {{.global.GetUpdateJobDetail.output.JobMessage}} CompletedTime: {{.global.GetUpdateJobDetail.output.CompletedTime}} {{ else }} Job status is \"Paused\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetUpdateJobDetail.output.JobState \"queued\" }}","Message":"HTTP Status code: {{.global.GetUpdateJobDetail.output.HttpStatusCode}}: {{if .global.GetUpdateJobDetail.output.JobMessage}} Job state: {{.global.GetUpdateJobDetail.output.JobState}} Message: {{.global.GetUpdateJobDetail.output.JobMessage}} CompletedTime: {{.global.GetUpdateJobDetail.output.CompletedTime}} {{ else }} Job status is \"Queued\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetUpdateJobDetail.output.JobState \"running\" }}","Message":"HTTP Status code: {{.global.GetUpdateJobDetail.output.HttpStatusCode}}: {{if .global.GetUpdateJobDetail.output.JobMessage}} Job state: {{.global.GetUpdateJobDetail.output.JobState}} Message: {{.global.GetUpdateJobDetail.output.JobMessage}} CompletedTime: {{.global.GetUpdateJobDetail.output.CompletedTime}} {{ else }} Job status is \"Running\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetUpdateJobDetail.output.JobState \"success\" }}","Message":"Load-sharing mirrors updated successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobState","ObjectType":"content.Parameter","Path":"$.state","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"CompletedTime","ObjectType":"content.Parameter","Path":"$.end_time","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobMessage","ObjectType":"content.Parameter","Path":"$.message","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{eq (.global.GetNumLoadSharingMirrors.output.NumLoadSharingVolumes | Atoi) 0}}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/cluster/jobs/{{.global.UpdateMirrors.output.JobUuid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppVolumeDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 400) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 501) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 200) }}","Message":"NAS volume created successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeName","ObjectType":"content.Parameter","Path":"$.records[0].name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"SvmUuid","ObjectType":"content.Parameter","Path":"$.records[0].svm.uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyId","ObjectType":"content.Parameter","Path":"$.records[0].nas.export_policy.id","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyName","ObjectType":"content.Parameter","Path":"$.records[0].nas.export_policy.name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"MountPath","ObjectType":"content.Parameter","Path":"$.records[0].nas.path","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AggregateUuid","ObjectType":"content.Parameter","Path":"$.records[0].aggregates[0].uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?name={{.global.task.input.VolumeName}}&svm.name={{.global.task.input.StorageVirtualMachineName}}&fields=size,nas,aggregates,svm"},{"Body":"{ \"rules\": [ {{range $index, $clientMatchList :=.global.task.input.AccessPermissions.ClientMatchList}}{{if $index}},{{end}} {\"clients\": [{{ range $idx, $clientMatch := (FindAllString $clientMatchList \"([^,]+)\") }}{{if $idx}},{{end}} { \"match\": \"{{$clientMatch}}\" } {{end}}], \"protocols\": [\"nfs\"], \"ro_rule\": [\"sys\"], \"rw_rule\": [\"sys\"], \"superuser\": [\"sys\"]} {{end}}  ] }","ContentType":"json","EndpointRequestType":"Internal","Method":"PATCH","Name":"UpdateExportPolicyRules","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.UpdateExportPolicyRules.output.HttpStatusCode 400) (le .global.UpdateExportPolicyRules.output.HttpStatusCode 499)}}","Message":"{{if .global.UpdateExportPolicyRules.output.Errors}}{{$err := (index .global.UpdateExportPolicyRules.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateExportPolicyRules.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.UpdateExportPolicyRules.output.HttpStatusCode 500)}}","Message":"{{if .global.UpdateExportPolicyRules.output.Errors}}{{$err := (index .global.UpdateExportPolicyRules.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateExportPolicyRules.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.UpdateExportPolicyRules.output.HttpStatusCode 501) (le .global.UpdateExportPolicyRules.output.HttpStatusCode 599)}}","Message":"{{if .global.UpdateExportPolicyRules.output.Errors}}{{$err := (index .global.UpdateExportPolicyRules.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateExportPolicyRules.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.UpdateExportPolicyRules.output.HttpStatusCode 200)}}","Message":"Updated export policy rules.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","SkipOnCondition":"{{if index .global.task.input.AccessPermissions \"CreateExportPolicy\" }} false {{else}} true {{end}}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/nfs/export-policies/{{Ftoi .global.GetNetAppVolumeDetails.output.ExportPolicyId}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppAggregateHomeNode","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppAggregateHomeNode.output.HttpStatusCode 400) (le .global.GetNetAppAggregateHomeNode.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppAggregateHomeNode.output.Errors}}{{$err := (index .global.GetNetAppAggregateHomeNode.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppAggregateHomeNode.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppAggregateHomeNode.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppAggregateHomeNode.output.Errors}}{{$err := (index .global.GetNetAppAggregateHomeNode.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppAggregateHomeNode.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppAggregateHomeNode.output.HttpStatusCode 501) (le .global.GetNetAppAggregateHomeNode.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppAggregateHomeNode.output.Errors}}{{$err := (index .global.GetNetAppAggregateHomeNode.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppAggregateHomeNode.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppAggregateHomeNode.output.HttpStatusCode 200) }}","Message":"Aggregate home node retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"HomeNodeUuid","ObjectType":"content.Parameter","Path":"$.home_node.uuid","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{or (not (index .global.task.input.AccessPermissions \"ExportViaNfs\")) (ContainsString .global.GetJobDetail.output.JobState \"failure\") }}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/aggregates/{{.global.GetNetAppVolumeDetails.output.AggregateUuid}}?fields=home_node"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppNfsInterface","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppNfsInterface.output.HttpStatusCode 400) (le .global.GetNetAppNfsInterface.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppNfsInterface.output.Errors}}{{$err := (index .global.GetNetAppNfsInterface.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppNfsInterface.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppNfsInterface.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppNfsInterface.output.Errors}}{{$err := (index .global.GetNetAppNfsInterface.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppNfsInterface.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppNfsInterface.output.HttpStatusCode 501) (le .global.GetNetAppNfsInterface.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppNfsInterface.output.Errors}}{{$err := (index .global.GetNetAppNfsInterface.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppNfsInterface.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppNfsInterface.output.HttpStatusCode 200) }}","Message":"NFS interface retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"IpAddress","ObjectType":"content.Parameter","Path":"$.records[0].ip.address","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{or (not (index .global.task.input.AccessPermissions \"ExportViaNfs\")) (ContainsString .global.GetJobDetail.output.JobState \"failure\") }}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/network/ip/interfaces?fields=ip&services=data_nfs&location.home_node.uuid={{.global.GetNetAppAggregateHomeNode.output.HomeNodeUuid}}&svm.name={{.global.task.input.StorageVirtualMachineName}}"},{"Body":"{\"Type\":\"storage.NetAppExportPolicy\",\"Queries\": [{\"PolicyId\": \"{{Ftoi .global.GetNetAppVolumeDetails.output.ExportPolicyId}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateExportPolicyInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateExportPolicyInventory.output.HttpStatusCode 200}}","Message":"Export policy added successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateExportPolicyInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateExportPolicyInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppCluster\",\"Queries\": [{\"Uuid\": \"{{.global.GetClusterUuid.output.Uuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateClusterInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateClusterInventory.output.HttpStatusCode 200}}","Message":"Updated cluster after volume creation.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateClusterInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateClusterInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppAggregate\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppVolumeDetails.output.AggregateUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateAggregateInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateAggregateInventory.output.HttpStatusCode 200}}","Message":"Updated aggregate after volume creation.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateAggregateInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateAggregateInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppVolume\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppVolumeDetails.output.VolumeUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateVolumeInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"Volume created successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateVolumeInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppCifsShare\",\"Queries\": [{\"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\", \"SvmUuid\": \"{{.global.GetNetAppVolumeDetails.output.SvmUuid}}\", \"Name\": \"{{.global.GetNetAppVolumeDetails.output.VolumeName}}\" }], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateCifsShareInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateCifsShareInventory.output.HttpStatusCode 200}}","Message":"Volume created successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateCifsShareInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateCifsShareInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","SkipOnCondition":"{{if index .global.task.input.AccessPermissions \"ShareViaSmbCifs\"}} false {{else}} true {{end}}","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.NetAppCluster"}},"Description":"Create a NAS volume.","ErrorResponseHandler":{"ObjectType":"workflow.ErrorResponseHandler","Selector":"Name eq \"NetAppApiErrorResponseHandler\""},"Name":"NewNetAppNasSmartVolume","ObjectType":"workflow.BatchApiExecutor","Output":{"ExportPolicyId":"{{Ftoi .global.GetNetAppVolumeDetails.output.ExportPolicyId}}","ExportPolicyName":"{{.global.GetNetAppVolumeDetails.output.ExportPolicyName}}","MountPath":"{{.global.GetNetAppVolumeDetails.output.MountPath}}","NfsInterfaceIpAddress":"{{.global.GetNetAppNfsInterface.output.IpAddress}}","VolumeCapacity":"{{.global.task.input.VolumeCapacity| ToJson}}","VolumeName":"{{.global.GetNetAppVolumeDetails.output.VolumeName}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{if ne .global.task.input.StorageDevice.ObjectType \"storage.NetAppCluster\"}} true {{end}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewNetAppNasSmartVolume\" and Version eq 5"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Remove a VMFS datastore from Vmware hypervisor.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveHypervisorDatastore\" and Version eq 2"},"Label":"Remove Hypervisor Datastore","Name":"RemoveHypervisorDatastoreImpl","ObjectType":"workflow.TaskDefinition","Properties":{"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore is hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore is hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the datastore to be removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Disk associated with the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk name","Name":"NAAId","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"LUN number of the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Number","Name":"LUNNumber","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":150,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":2},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Create a new VMFS/NFS Datastore on Vmware hypervisor.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewHypervisorDatastore\" and Version eq 1"},"Label":"New Hypervisor Datastore","Name":"NewHypervisorDatastoreVmwareImpl","ObjectType":"workflow.TaskDefinition","Properties":{"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name for the new datastore, limited to 42 characters.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints","Regex":"^.{1,42}$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type and version of the new datastore. Minimum datastore size: VMFS 5 - 1.3GB, VMFS 6 - 2GB. Kerberos support is enabled in NFS4.1 only.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Type of Datastore","Name":"DatastoreVersion","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreVersionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the newly created datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"VMFS Version","Name":"VMFSVersion","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore Type","Name":"DatastoreType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Disk identity of the newly created datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk","Name":"Disk","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":300,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"Batch":[{"Body":"{ \"Datastore\":\"{{.global.task.input.Datastore}}\",  \"Cluster\":{{ if .global.task.input.Cluster}}\"{{.global.task.input.Cluster}}\",{{else}}\"\",{{end}}   \"Host\":{{ if .global.task.input.Host}}\"{{.global.task.input.Host}}\",{{else}}\"\",{{end}}  \"Datacenter\":\"{{.global.task.input.Datacenter}}\" }","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"RemoveHypervisorDatastoreImpl","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (eq .global.RemoveHypervisorDatastoreImpl.output.HttpStatusCode 400) ( or (ContainsString .global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg \"Datastore\") (ContainsString .global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg \"datastore\") ) (ContainsString .global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg \"not found\") }}","Message":"Datastore delete request marked successful. Message: {{.global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg}}. ","ObjectType":"workflow.Outcome"},{"Condition":"{{(ne .global.RemoveHypervisorDatastoreImpl.output.HttpStatusCode 200)}}","Error":true,"Message":"Failed to remove datastore. Message: {{.global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Datastore '{{.global.RemoveHypervisorDatastoreImpl.output.DatastoreName}}' removed successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datastore","ObjectType":"content.Parameter","Path":"$.Datastore","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreName","ObjectType":"content.Parameter","Path":"$.DatastoreName","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NAAId","ObjectType":"content.Parameter","Path":"$.NAAId","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"LUNNumber","ObjectType":"content.Parameter","Path":"$.LUNNumber","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Timeout":120,"Url":"/task/Execute/RemoveDatastore"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Remove VMFS or NFS datastore from Vmware hypervisor.","Name":"RemoveHypervisorDatastoreImpl","ObjectType":"workflow.BatchApiExecutor","Output":{"Datastore":"{{.global.RemoveHypervisorDatastoreImpl.output.Datastore}}","LUNNumber":"{{.global.RemoveHypervisorDatastoreImpl.output.LUNNumber}}","NAAId":"{{.global.RemoveHypervisorDatastoreImpl.output.NAAId}}"},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveHypervisorDatastoreImpl\" and Version eq 2"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"Body":"{ \"Datacenter\":\"{{.global.task.input.Datacenter}}\",\"Datastore\":\"{{.global.task.input.Datastore}}\",\"Disk\":{{ if .global.task.input.DatastoreVersion.Disk}}\"{{.global.task.input.DatastoreVersion.Disk}}\",{{else}}\"\",{{end}} \"Cluster\":{{ if .global.task.input.Cluster}}\"{{.global.task.input.Cluster}}\",{{else}}\"\",{{end}}   \"Host\":{{ if .global.task.input.Host}}\"{{.global.task.input.Host}}\",{{else}}\"\",{{end}} \"VMFSVersion\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\", \"DatastoreType\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewHypervisorDatastoreVmwareImplVMFS","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.NewHypervisorDatastoreVmwareImplVMFS.output.HttpStatusCode 200)}}","Error":true,"Message":"Failed to create datastore. Message: {{.global.NewHypervisorDatastoreVmwareImplVMFS.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Datastore '{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.DatastoreName}}' created successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datastore","ObjectType":"content.Parameter","Path":"$.Datastore","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datacenter","ObjectType":"content.Parameter","Path":"$.Datacenter","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VMFSVersion","ObjectType":"content.Parameter","Path":"$.VMFSVersion","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreType","ObjectType":"content.Parameter","Path":"$.DatastoreType","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Disk","ObjectType":"content.Parameter","Path":"$.Disk","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Host","ObjectType":"content.Parameter","Path":"$.Host","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Cluster","ObjectType":"content.Parameter","Path":"$.Cluster","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreName","ObjectType":"content.Parameter","Path":"$.DatastoreName","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{and (ne .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\")  (ne .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\") }}","TargetType":"Endpoint","Timeout":270,"Url":"/task/Execute/NewVmfsDatastore"},{"Body":"{ \"Datacenter\":\"{{.global.task.input.Datacenter}}\",\"Datastore\":\"{{.global.task.input.Datastore}}\",\"Cluster\":{{ if .global.task.input.Cluster}}\"{{.global.task.input.Cluster}}\",{{else}}\"\",{{end}}   \"Host\":{{ if .global.task.input.Host}}\"{{.global.task.input.Host}}\",{{else}}\"\",{{end}} \"VMFSVersion\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\", \"DatastoreType\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\",\"RemotePath\":{{if .global.task.input.DatastoreVersion.RemotePath}}\"{{.global.task.input.DatastoreVersion.RemotePath}}\", {{else}} \"\",{{end}} \"RemoteHostNames\":{{.global.task.input.DatastoreVersion.RemoteHostNames | ToJson}}, \"AccessMode\":{{if .global.task.input.DatastoreVersion.AccessMode}}\"{{.global.task.input.DatastoreVersion.AccessMode}}\" {{else}}\"\"{{end}} }","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewHypervisorDatastoreVmwareImplNFS","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.NewHypervisorDatastoreVmwareImplNFS.output.HttpStatusCode 200)}}","Error":true,"Message":"{{.global.NewHypervisorDatastoreVmwareImplNFS.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Datastore '{{.global.NewHypervisorDatastoreVmwareImplNFS.output.DatastoreName}}' created successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datastore","ObjectType":"content.Parameter","Path":"$.Datastore","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datacenter","ObjectType":"content.Parameter","Path":"$.Datacenter","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VMFSVersion","ObjectType":"content.Parameter","Path":"$.VMFSVersion","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreType","ObjectType":"content.Parameter","Path":"$.DatastoreType","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Disk","ObjectType":"content.Parameter","Path":"$.Disk","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Host","ObjectType":"content.Parameter","Path":"$.Host","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreName","ObjectType":"content.Parameter","Path":"$.DatastoreName","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Cluster","ObjectType":"content.Parameter","Path":"$.Cluster","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{ne .global.task.input.DatastoreVersion.VMFSVersion \"NFS\"}}","TargetType":"Endpoint","Timeout":270,"Url":"/task/Execute/NewVmfsDatastore"},{"Body":"{ \"Datacenter\":\"{{.global.task.input.Datacenter}}\",\"Datastore\":\"{{.global.task.input.Datastore}}\",\"Cluster\":{{ if .global.task.input.Cluster}}\"{{.global.task.input.Cluster}}\",{{else}}\"\",{{end}}   \"Host\":{{ if .global.task.input.Host}}\"{{.global.task.input.Host}}\",{{else}}\"\",{{end}} \"VMFSVersion\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\", \"DatastoreType\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\",\"RemotePath\":{{if .global.task.input.DatastoreVersion.RemotePath}}\"{{.global.task.input.DatastoreVersion.RemotePath}}\", {{else}} \"\",{{end}} \"RemoteHostNames\":{{.global.task.input.DatastoreVersion.RemoteHostNames | ToJson}}, \"AccessMode\":{{if .global.task.input.DatastoreVersion.AccessMode}}\"{{.global.task.input.DatastoreVersion.AccessMode}}\", {{else}}\"\",{{end}} \"SecurityType\":{{if .global.task.input.DatastoreVersion.SecurityType}}\"{{.global.task.input.DatastoreVersion.SecurityType}}\" {{else}} \"\"{{end}} }","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewHypervisorDatastoreVmwareImplNFS41","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.NewHypervisorDatastoreVmwareImplNFS41.output.HttpStatusCode 200)}}","Error":true,"Message":"{{.global.NewHypervisorDatastoreVmwareImplNFS41.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Datastore '{{.global.NewHypervisorDatastoreVmwareImplNFS41.output.DatastoreName}}' created successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datastore","ObjectType":"content.Parameter","Path":"$.Datastore","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datacenter","ObjectType":"content.Parameter","Path":"$.Datacenter","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VMFSVersion","ObjectType":"content.Parameter","Path":"$.VMFSVersion","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreType","ObjectType":"content.Parameter","Path":"$.DatastoreType","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Disk","ObjectType":"content.Parameter","Path":"$.Disk","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Host","ObjectType":"content.Parameter","Path":"$.Host","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Cluster","ObjectType":"content.Parameter","Path":"$.Cluster","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreName","ObjectType":"content.Parameter","Path":"$.DatastoreName","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{ne .global.task.input.DatastoreVersion.VMFSVersion \"NFS41\"}}","TargetType":"Endpoint","Timeout":270,"Url":"/task/Execute/NewVmfsDatastore"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Create a new VMFS/NFS Datastore on Vmware hypervisor.","Name":"NewHypervisorDatastoreVmwareImpl","ObjectType":"workflow.BatchApiExecutor","Output":{"Cluster":"{{if .global.task.input.Cluster}}{{.global.task.input.Cluster}}{{end}}","Datacenter":"{{.global.task.input.Datacenter}}","Datastore":"{{if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.Datastore}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.Datastore}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"NFS41\"}}{{.global.NewHypervisorDatastoreVmwareImplNFS41.output.Datastore}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"NFS\"}}{{.global.NewHypervisorDatastoreVmwareImplNFS.output.Datastore}}{{end}}","DatastoreType":"{{if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.DatastoreType}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.DatastoreType}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"NFS41\"}}{{.global.NewHypervisorDatastoreVmwareImplNFS41.output.DatastoreType}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"NFS\"}}{{.global.NewHypervisorDatastoreVmwareImplNFS.output.DatastoreType}}{{end}}","Disk":"{{if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.Disk}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.Disk}}{{end}}","Host":"{{if .global.task.input.Host}}{{.global.task.input.Host}}{{end}}","VMFSVersion":"{{if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\"}}{{.global.task.input.DatastoreVersion.VMFSVersion}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\"}}{{.global.task.input.DatastoreVersion.VMFSVersion}}{{end}}"},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewHypervisorDatastoreVmwareImpl\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"}]