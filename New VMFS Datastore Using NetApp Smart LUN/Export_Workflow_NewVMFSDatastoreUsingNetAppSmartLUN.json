[{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Datacenter","Label":"Datacenter","Name":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","InventoryPath"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseDatacenter)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"InventoryPath"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Cluster.","Label":"Cluster","Name":"HypervisorClusterType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","InventoryPath"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseCluster)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"InventoryPath"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Hypervisor Host.","Label":"ESXi Host","Name":"HypervisorHostType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":255,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^(([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\\\\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:)|[a-zA-Z0-9]+([a-zA-Z0-9-._]*[a-zA-Z0-9]))$"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseHost)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Storage capacity.","Label":"Storage Capacity","Name":"StorageCapacityType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Size must be a number (used in conjunction with unit).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Size","Name":"VolumeSize","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":19,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9]{1,19}"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Unit is a string with a single character unit symbol. Valid unit symbols are K, M, G, T, and P representing Bytes, Kilobyte, Megabyte, Gigabyte, Terabyte, and Petabyte respectively, where one Kilobyte equals 1024 Bytes, one Megabyte equals 1048576 Bytes and so on.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Unit","Name":"VolumeUnit","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"KiB","ObjectType":"workflow.EnumEntry","Value":"K"},{"Label":"MiB","ObjectType":"workflow.EnumEntry","Value":"M"},{"Label":"GiB","ObjectType":"workflow.EnumEntry","Value":"G"},{"Label":"TiB","ObjectType":"workflow.EnumEntry","Value":"T"},{"Label":"PiB","ObjectType":"workflow.EnumEntry","Value":"P"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"NetApp storage target device.","Label":"NetApp Storage Target Datatype","Name":"NetAppStorageTargetDataType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"CustomDataTypeProperties":{"ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage target device.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ObjectType"],"DisplayAttributes":["Name","ManagementAddress"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/storage/NetAppClusters?$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["storage.NetAppCluster"]}],"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"NetApp storage virtual machine name.","Label":"NetApp Storage Virtual Machine","Name":"NetAppStorageVirtualMachineNameType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine","Name":"StorageVirtualMachineName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":47,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9A-z_][-A-z0-9._]*"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppStorageVms?$orderby=Name&$select=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Choose an existing NetApp initiator group or create a new one.","Label":"NetApp Initiator Group Options","Name":"NetAppAddInitiatorGroupOptionsType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"SelectExistingInitiatorGroup","EnableParameters":["ExistingIgroupName"],"Name":"show-existingigroup","ObjectType":"workflow.ParameterSet","Value":"true"},{"Condition":"eq","ControlParameter":"CreateNewInitiatorGroup","EnableParameters":["NewIgroupName","OperatingSystem","Protocol","Initiators"],"Name":"show-newigroup","ObjectType":"workflow.ParameterSet","Value":"true"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"If set to true, select an existing initiator group.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Select Existing Initiator Group","Name":"SelectExistingInitiatorGroup","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Existing initiator group.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Existing Initiator Group","Name":"ExistingIgroupName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","OsType","Protocol"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppInitiatorGroups?$orderby=Name&$expand=Tenant($select=Name)","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"If set to true, create a new initiator group. Provide the initiator group name, operating system, protocol, and a list of initiators. Initiators can contain a FC WWPN such as \"21:00:00:e0:8b:05:05:04\" or an iSCSI initiator name such as \"iqn.1998-01.com.example.iscsi:name1\" or \"eui.0123456789abcdef\".","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Create New Initiator Group","Name":"CreateNewInitiatorGroup","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The initiator group name must be alphanumeric, can include up to 96 characters, and may contain hyphen (-) or underscore (_).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"New Initiator Group Name","Name":"NewIgroupName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":96,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^[a-zA-Z0-9]+([_a-zA-Z0-9-]*[a-zA-Z0-9])*$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Initiator group protocol.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Protocol","Name":"Protocol","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"FCP","ObjectType":"workflow.EnumEntry","Value":"fcp"},{"Label":"iSCSI","ObjectType":"workflow.EnumEntry","Value":"iscsi"},{"Label":"Mixed","ObjectType":"workflow.EnumEntry","Value":"mixed"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Operating system for the initiator group.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Operating System","Name":"OperatingSystem","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"VMware","ObjectType":"workflow.EnumEntry","Value":"vmware"},{"Label":"AIX","ObjectType":"workflow.EnumEntry","Value":"aix"},{"Label":"HP-UX","ObjectType":"workflow.EnumEntry","Value":"hpux"},{"Label":"Hyper-V","ObjectType":"workflow.EnumEntry","Value":"hyper_v"},{"Label":"Linux","ObjectType":"workflow.EnumEntry","Value":"linux"},{"Label":"Netware","ObjectType":"workflow.EnumEntry","Value":"netware"},{"Label":"Solaris","ObjectType":"workflow.EnumEntry","Value":"solaris"},{"Label":"OpenVMS","ObjectType":"workflow.EnumEntry","Value":"openvms"},{"Label":"Windows","ObjectType":"workflow.EnumEntry","Value":"windows"},{"Label":"Xen","ObjectType":"workflow.EnumEntry","Value":"xen"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of initiators. The initiator can contain an FC WWPN such as \"21:00:00:e0:8b:05:05:04\" or an iSCSI initiator name such as \"iqn.1998-01.com.example.iscsi:name1\" or \"eui.0123456789abcdef\".","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Initiator","Max":500,"Min":1,"Name":"Initiators","ObjectType":"workflow.ArrayDataType","Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Choose an existing NetApp initiator group or create a new one.","Label":"NetApp Initiator Group Options","Name":"NetAppNewOrExistingInitiatorGroupType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"CreateNewInitiatorGroup","EnableParameters":["ExistingIgroupName"],"Name":"show-existing-igroup","ObjectType":"workflow.ParameterSet","Value":"false"},{"Condition":"eq","ControlParameter":"CreateNewInitiatorGroup","EnableParameters":["NewIgroupName","OperatingSystem","Protocol","Initiators"],"Name":"show-new-igroup","ObjectType":"workflow.ParameterSet","Value":"true"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Select existing initiator group.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Initiator Group","Name":"ExistingIgroupName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","OsType","Protocol"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppInitiatorGroups?$orderby=Name&$expand=Tenant($select=Name)","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"If selected, create a new initiator group by providing the initiator group name, operating system, protocol, and a list of initiators. Initiators can contain a FC WWPN such as \"21:00:00:e0:8b:05:05:04\" or an iSCSI initiator name such as \"iqn.1998-01.com.example.iscsi:name1\" or \"eui.0123456789abcdef\".","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"New Initiator Group","Name":"CreateNewInitiatorGroup","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The initiator group name must be alphanumeric, can include up to 96 characters, and may contain hyphen (-) or underscore (_).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"New Initiator Group Name","Name":"NewIgroupName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":96,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^[a-zA-Z0-9]+([_a-zA-Z0-9-]*[a-zA-Z0-9])*$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Initiator group protocol.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Protocol","Name":"Protocol","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"FCP","ObjectType":"workflow.EnumEntry","Value":"fcp"},{"Label":"iSCSI","ObjectType":"workflow.EnumEntry","Value":"iscsi"},{"Label":"Mixed","ObjectType":"workflow.EnumEntry","Value":"mixed"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Operating system for the initiator group.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Operating System","Name":"OperatingSystem","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"VMware","ObjectType":"workflow.EnumEntry","Value":"vmware"},{"Label":"AIX","ObjectType":"workflow.EnumEntry","Value":"aix"},{"Label":"HP-UX","ObjectType":"workflow.EnumEntry","Value":"hpux"},{"Label":"Hyper-V","ObjectType":"workflow.EnumEntry","Value":"hyper_v"},{"Label":"Linux","ObjectType":"workflow.EnumEntry","Value":"linux"},{"Label":"Netware","ObjectType":"workflow.EnumEntry","Value":"netware"},{"Label":"Solaris","ObjectType":"workflow.EnumEntry","Value":"solaris"},{"Label":"OpenVMS","ObjectType":"workflow.EnumEntry","Value":"openvms"},{"Label":"Windows","ObjectType":"workflow.EnumEntry","Value":"windows"},{"Label":"Xen","ObjectType":"workflow.EnumEntry","Value":"xen"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of initiators. The initiator can contain an FC WWPN such as \"21:00:00:e0:8b:05:05:04\" or an iSCSI initiator name such as \"iqn.1998-01.com.example.iscsi:name1\" or \"eui.0123456789abcdef\".","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Initiator","Max":500,"Min":1,"Name":"Initiators","ObjectType":"workflow.ArrayDataType","Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"NetApp LUN path.","Label":"NetApp LUN Path","Name":"NetAppLunPathType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"LUN Path should be between 1 and 254 characters long depending on the device target selected it may vary, for example /vol/vol1/lun1.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Path","Name":"LunPath","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","Path"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppLuns?$orderby=Name&$select=Name,Path","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Path"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"NetApp volume name.","Label":"NetApp Volume","Name":"NetAppVolumeNameType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Name","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":197,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[A-z][_A-z0-9]*"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppVolumes?$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Remove a LUN with LUN path and a storage virtual machine name as the inputs. On successful execution, the LUN path is generated as output.","Label":"Remove NetApp Smart LUN","Name":"RemoveNetAppSmartLun","ObjectType":"workflow.TaskDefinition","Properties":{"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppStorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine","Name":"StorageVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppStorageVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"LUN path (e.g., /vol/vol1/lun1).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Path","Name":"LunPath","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","IsMapped","Path"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppLuns?$orderby=Name&$select=Name,Path,IsMapped","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Path"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Remove the LUN even if the LUN is mapped to an initiator group.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Remove Mapped LUN","Name":"RemoveMappedLunFlag","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Remove the volume when the LUN being removed is the last LUN on the volume.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Remove Volume","Name":"RemoveVolumeFlag","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"LUN path (e.g., /vol/vol1/lun1).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Path","Name":"LunPath","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Initiator Group Name","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Initiator Group Name","Name":"IgroupName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Storage"},{"Key":"subcategory","Value":"NetApp"},{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":3},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Create a LUN and its volume, select an existing initiator group or create a new one, and map the LUN to the initiator group. Inputs are the storage virtual machine name, LUN name, LUN size, performance service level, LUN operating system format, and either a new or existing initiator group. On successful execution, LUN path, NAA ID, LUN capacity, volume name, initiator group name, and logical unit number are generated as outputs.","Label":"New NetApp Smart LUN","Name":"NewNetAppSmartLun","ObjectType":"workflow.TaskDefinition","Properties":{"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppStorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine","Name":"StorageVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppStorageVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"LUN name must be between 1 and 254 characters long. It should begin with a letter and only \"a\" to \"z\", \"A\" to \"Z\", \"0\" to \"9\", underscore (_) are allowed. The volume created for the LUN will be named the same as the LUN name and the LUN path will be at /vol/lun_name/lun_name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Name","Name":"LunName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9A-z][A-z0-9_]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"LUN size and unit.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Capacity","Name":"LunCapacity","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageCapacityType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Performance service levels represent the performance expectations of the clients or applications using the storage system. The selection of a performance service level indicates the location of the new storage in the cluster and the QoS policy assigned to the storage. Value is used for applications for which throughput and capacity are more important than latency. Performance is used for applications with modest performance needs and latency. Extreme is used for applications that expect the lowest latency and highest performance.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Performance Service Level","Name":"PerformanceServiceLevel","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"None","ObjectType":"workflow.EnumEntry","Value":"none"},{"Label":"Performance","ObjectType":"workflow.EnumEntry","Value":"performance"},{"Label":"Value","ObjectType":"workflow.EnumEntry","Value":"value"},{"Label":"Extreme","ObjectType":"workflow.EnumEntry","Value":"extreme"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Operating system type for the new LUN.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Operating System Format","Name":"LunOperatingSystemFormat","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"VMware","ObjectType":"workflow.EnumEntry","Value":"vmware"},{"Label":"AIX","ObjectType":"workflow.EnumEntry","Value":"aix"},{"Label":"HP-UX","ObjectType":"workflow.EnumEntry","Value":"hpux"},{"Label":"Hyper-V","ObjectType":"workflow.EnumEntry","Value":"hyper_v"},{"Label":"Linux","ObjectType":"workflow.EnumEntry","Value":"linux"},{"Label":"Netware","ObjectType":"workflow.EnumEntry","Value":"netware"},{"Label":"Solaris","ObjectType":"workflow.EnumEntry","Value":"solaris"},{"Label":"OpenVMS","ObjectType":"workflow.EnumEntry","Value":"openvms"},{"Label":"Windows","ObjectType":"workflow.EnumEntry","Value":"windows"},{"Label":"Windows_2008","ObjectType":"workflow.EnumEntry","Value":"windows_2008"},{"Label":"Windows_gpt","ObjectType":"workflow.EnumEntry","Value":"windows_gpt"},{"Label":"Solaris_efi","ObjectType":"workflow.EnumEntry","Value":"solaris_efi"},{"Label":"Xen","ObjectType":"workflow.EnumEntry","Value":"xen"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Choose an existing initiator group or create a new one.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Initiator Group Options","Name":"InitiatorGroupOptions","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppNewOrExistingInitiatorGroupType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Enable local snapshot copies using the default policy.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Enable Local Snapshot Copies","Name":"LocalSnapshotCopies","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"LUN path (e.g., /vol/vol1/lun1).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Path","Name":"LunPath","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppLunPathType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Network Address Authority identifier for the LUN.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NAA ID","Name":"NaaId","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"LUN size and unit.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Capacity","Name":"LunCapacity","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageCapacityType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume","Name":"VolumeName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppVolumeNameType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Initiator Group Name","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Initiator Group Name","Name":"IgroupName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Logical Unit Number","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Logical Unit Number","Name":"LUN","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Remove the LUN even if the LUN is mapped to an initiator group when executing a Rollback.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Remove Mapped LUN on Rollback","Name":"RemoveMappedLunFlag","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Remove the volume with the LUN when executing a Rollback.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Remove Volume on Rollback","Name":"RemoveVolumeFlag","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"},"Required":true}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"Remove a LUN.","InputParameters":{"LunPath":"${task.output.LunPath}","RemoveMappedLunFlag":"${task.output.RemoveMappedLunFlag}","RemoveVolumeFlag":"${task.output.RemoveVolumeFlag}","StorageDevice":"${task.input.StorageDevice}","StorageVirtualMachineName":"${task.input.StorageVirtualMachineName}"},"Name":"RemoveNetAppSmartLun","ObjectType":"workflow.RollbackTask","Version":3}],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Storage"},{"Key":"subcategory","Value":"NetApp"},{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":4},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Type and version of datastore.","Label":"Types of Datastore","Name":"HypervisorDatastoreVersionsType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"VMFSVersion","EnableParameters":["Disk"],"Name":"rule-1","ObjectType":"workflow.ParameterSet","Value":"VMFS5"},{"Condition":"eq","ControlParameter":"VMFSVersion","EnableParameters":["Disk"],"Name":"rule-2","ObjectType":"workflow.ParameterSet","Value":"VMFS6"},{"Condition":"eq","ControlParameter":"VMFSVersion","EnableParameters":["RemotePath","RemoteHostNames","AccessMode"],"Name":"rule-3","ObjectType":"workflow.ParameterSet","Value":"NFS"},{"Condition":"eq","ControlParameter":"VMFSVersion","EnableParameters":["RemotePath","RemoteHostNames","AccessMode","SecurityType"],"Name":"rule-4","ObjectType":"workflow.ParameterSet","Value":"NFS41"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type and version of datastore","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Radio"},"Label":"Type of Datastore","Name":"VMFSVersion","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"VMFS-6","ObjectType":"workflow.EnumEntry","Value":"VMFS6"},{"Label":"VMFS-5","ObjectType":"workflow.EnumEntry","Value":"VMFS5"},{"Label":"NFS3","ObjectType":"workflow.EnumEntry","Value":"NFS"},{"Label":"NFS4.1","ObjectType":"workflow.EnumEntry","Value":"NFS41"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Canonical disk (also called NaaId) that backs the datastore (example: 6cc167e972c4928023401a54db995b66).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk","Name":"Disk","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The remote path of the NFS mount point.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Remote Path","Name":"RemotePath","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The hostnames or IP addresses of remote NFS server. In case of NFS v4.1 this may have multiple entries.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NFS Server Address","Max":32,"Min":1,"Name":"RemoteHostNames","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Access mode for the NFS server. Select read-only if volume is exported as read-only.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Radio"},"Label":"Access Mode","Name":"AccessMode","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Read Write","ObjectType":"workflow.EnumEntry","Value":"readWrite"},{"Label":"Read Only","ObjectType":"workflow.EnumEntry","Value":"readOnly"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Security for the NFS datastore. Default is the basic AUTH_SYS security.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Radio"},"Label":"Security type","Name":"SecurityType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Default Security","ObjectType":"workflow.EnumEntry","Value":"AUTH_SYS"},{"Label":"Kerberos for authentication only","ObjectType":"workflow.EnumEntry","Value":"SEC_KRB5"},{"Label":"Kerberos with Data Integrity","ObjectType":"workflow.EnumEntry","Value":"SEC_KRB5I"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Datastore.","Label":"Datastore","Name":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","InventoryPath"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseDatastore)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"InventoryPath"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Remove datastore from selected hypervisor. Requires datacenter, cluster (or host), datastore as inputs. On successful execution, the datastore name, NaaId of the deleted datastore, and the LUN number are generated as outputs.","Label":"Remove Hypervisor Datastore","Name":"RemoveHypervisorDatastore","ObjectType":"workflow.TaskDefinition","Properties":{"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore is hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore is hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the datastore to be removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Disk associated with the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk name","Name":"NAAId","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"LUN number of the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Number","Name":"LUNNumber","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":150,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Virtualization"},{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":2},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Create a new datastore on selected hypervisor. Requires datacenter, cluster (or host), and datastore. For VMFS, the canonical disk name, and VMFS version inputs are needed. For NFS, remote server and mount path, and NFS version are needed. On successful execution, the datastore name, disk name, VMFS version, and datacenter name are generated as outputs.","Label":"New Hypervisor Datastore","Name":"NewHypervisorDatastore","ObjectType":"workflow.TaskDefinition","Properties":{"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name for the new datastore, limited to 42 characters.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints","Regex":"^.{1,42}$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type and version of the new datastore. Minimum datastore size: VMFS 5 - 1.3GB, VMFS 6 - 2GB. Kerberos support is enabled in NFS4.1 only.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Type of Datastore","Name":"DatastoreVersion","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreVersionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the newly created datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"VMFS Version","Name":"VMFSVersion","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore Type","Name":"DatastoreType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Disk identity of the newly created datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk","Name":"Disk","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":300,"TimeoutPolicy":"Retry"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"Remove Hypervisor Datastore ","InputParameters":{"Cluster":"${task.input.Cluster}","Datacenter":"${task.input.Datacenter}","Datastore":"${task.input.Datastore}","Host":"${task.input.Host}","Vcenter":"${task.input.Vcenter}"},"Name":"RemoveHypervisorDatastore","ObjectType":"workflow.RollbackTask","Version":2}],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Virtualization"},{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.WorkflowDefinition","DefaultVersion":true,"Description":"Create a new VMFS datastore. A volume and LUN with the same name as the datastore are created using the New NetApp Smart LUN task.","InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name for the new datastore, limited to 42 characters. It should begin with a letter and only \"a\" to \"z\", \"A\" to \"Z\", \"0\" to \"9\", underscore (_) are allowed. The volume and LUN created will be named the same as the datastore name and the LUN path will be at /vol/datastore_name/datastore_name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore Name","Name":"Datastore","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":42,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^[A-z][A-z0-9_]*$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datastore/volume/LUN size and unit.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore Capacity","Name":"LunCapacity","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageCapacityType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"VMFS6"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore Type","Name":"DatastoreType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"VMFS-6","ObjectType":"workflow.EnumEntry","Value":"VMFS6"},{"Label":"VMFS-5","ObjectType":"workflow.EnumEntry","Value":"VMFS5"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppStorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine","Name":"StorageVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppStorageVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Performance service levels represent the performance expectations of the clients or applications using the storage system. The selection of a performance service level indicates the location of the new storage in the storage device and the QoS policy assigned to the storage. Value is used for applications for which throughput and capacity are more important than latency. Performance is used for applications with modest performance needs and latency. Extreme is used for applications that expect the lowest latency and highest performance. Note: If the selected performance service level is not valid for the storage platform, the task will fail with an error message. Use the ‘None’ option if the storage virtual machine already has a QoS policy group.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Performance Service Level","Name":"PerformanceServiceLevel","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"None","ObjectType":"workflow.EnumEntry","Value":"none"},{"Label":"Performance","ObjectType":"workflow.EnumEntry","Value":"performance"},{"Label":"Value","ObjectType":"workflow.EnumEntry","Value":"value"},{"Label":"Extreme","ObjectType":"workflow.EnumEntry","Value":"extreme"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Value":"vmware"},"Description":"Operating system type for the new LUN.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Operating System Format","Name":"LunOperatingSystemFormat","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"VMware","ObjectType":"workflow.EnumEntry","Value":"vmware"},{"Label":"AIX","ObjectType":"workflow.EnumEntry","Value":"aix"},{"Label":"HP-UX","ObjectType":"workflow.EnumEntry","Value":"hpux"},{"Label":"Hyper-V","ObjectType":"workflow.EnumEntry","Value":"hyper_v"},{"Label":"Linux","ObjectType":"workflow.EnumEntry","Value":"linux"},{"Label":"Netware","ObjectType":"workflow.EnumEntry","Value":"netware"},{"Label":"Solaris","ObjectType":"workflow.EnumEntry","Value":"solaris"},{"Label":"OpenVMS","ObjectType":"workflow.EnumEntry","Value":"openvms"},{"Label":"Windows","ObjectType":"workflow.EnumEntry","Value":"windows"},{"Label":"Windows_2008","ObjectType":"workflow.EnumEntry","Value":"windows_2008"},{"Label":"Windows_gpt","ObjectType":"workflow.EnumEntry","Value":"windows_gpt"},{"Label":"Solaris_efi","ObjectType":"workflow.EnumEntry","Value":"solaris_efi"},{"Label":"Xen","ObjectType":"workflow.EnumEntry","Value":"xen"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Choose an existing initiator group or create a new one.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Initiator Group Options","Name":"InitiatorGroupOptions","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppNewOrExistingInitiatorGroupType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Enable local snapshot copies using the default policy.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Enable Local Snapshot Copies","Name":"LocalSnapshotCopies","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}}],"InputParameterSet":[],"Label":"New VMFS Datastore Using NetApp Smart LUN","Name":"NewVMFSDatastoreUsingNetAppSmartLUN","ObjectType":"workflow.WorkflowDefinition","OutputDefinition":[],"Properties":{"ObjectType":"workflow.WorkflowProperties","SupportStatus":"Supported"},"SharedScope":"user","Tags":[{"Key":"category","Value":"Virtualization"}],"Tasks":[{"Name":"StartTask","NextTask":"NewNetAppSmartLun1","ObjectType":"workflow.StartTask"},{"Name":"SuccessEndTask","ObjectType":"workflow.SuccessEndTask"},{"Name":"FailureEndTask","ObjectType":"workflow.FailureEndTask"},{"CatalogMoid":"shared","Description":"Create a LUN and its volume, select an existing initiator group or create a new one, and map the LUN to the initiator group. Inputs are the storage virtual machine name, LUN name, LUN size, performance service level, LUN operating system format, and either a new or existing initiator group. On successful execution, LUN path, NAA ID, LUN capacity, volume name, initiator group name, and logical unit number are generated as outputs.","InputParameters":{"InitiatorGroupOptions":"${workflow.input.InitiatorGroupOptions}","LocalSnapshotCopies":"${workflow.input.LocalSnapshotCopies}","LunCapacity":"${workflow.input.LunCapacity}","LunName":"${workflow.input.Datastore}","LunOperatingSystemFormat":"${workflow.input.LunOperatingSystemFormat}","PerformanceServiceLevel":"${workflow.input.PerformanceServiceLevel}","StorageDevice":"${workflow.input.StorageDevice}","StorageVirtualMachineName":"${workflow.input.StorageVirtualMachineName}"},"Label":"New NetApp Smart LUN","Name":"NewNetAppSmartLun1","ObjectType":"workflow.WorkerTask","OnSuccess":"NewHypervisorDatastore1","TaskDefinitionName":"NewNetAppSmartLun","Version":4},{"CatalogMoid":"shared","Description":"Create a new datastore on selected hypervisor. Requires datacenter, cluster (or host), and datastore. For VMFS, the canonical disk name, and VMFS version inputs are needed. For NFS, remote server and mount path, and NFS version are needed. On successful execution, the datastore name, disk name, VMFS version, and datacenter name are generated as outputs.","InputParameters":{"Cluster":"${workflow.input.Cluster}","Datacenter":"${workflow.input.Datacenter}","Datastore":"${workflow.input.Datastore}","DatastoreVersion":{"Disk":"{{ .global.NewNetAppSmartLun1.output.NaaId }}","VMFSVersion":"{{ .global.workflow.input.DatastoreType }}"},"Host":"${workflow.input.Host}","Vcenter":"${workflow.input.Vcenter}"},"Label":"New Hypervisor Datastore","Name":"NewHypervisorDatastore1","ObjectType":"workflow.WorkerTask","OnSuccess":"SuccessEndTask","TaskDefinitionName":"NewHypervisorDatastore","Version":1}],"UiInputFilters":[{"Filters":["Ancestors.Moid eq '${StorageDevice.Moid}'"],"Name":"StorageVirtualMachineName","ObjectType":"workflow.UiInputFilter"},{"Filters":["RegisteredDevice.Moid eq '${Vcenter.Moid}'"],"Name":"Datacenter","ObjectType":"workflow.UiInputFilter"},{"Filters":["RegisteredDevice.Moid eq '${Vcenter.Moid}'"],"Name":"Cluster","ObjectType":"workflow.UiInputFilter"},{"Filters":["RegisteredDevice.Moid eq '${Vcenter.Moid}'"],"Name":"Host","ObjectType":"workflow.UiInputFilter"},{"Filters":["Tenant.Moid eq '${StorageVirtualMachineName.Moid}'"],"Name":"InitiatorGroupOptions.ExistingIgroupName","ObjectType":"workflow.UiInputFilter"}],"UiRenderingData":{"Positions":[{"Name":"StartTask","X":205.24983853227872,"Y":119.23423719225426},{"Name":"SuccessEndTask","X":205.24983853227872,"Y":392.73423719225417},{"Name":"FailureEndTask","X":345.24983853227866,"Y":392.73423719225417},{"Name":"NewNetAppSmartLun1","X":120.24983853227867,"Y":194.73423719225423},{"Name":"NewHypervisorDatastore1","X":120.24983853227867,"Y":293.7342371922542}]},"VariableDefinition":[],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/WorkflowDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.ErrorResponseHandler","Name":"NetAppApiErrorResponseHandler","ObjectType":"workflow.ErrorResponseHandler","Parameters":[{"AcceptSingleValue":true,"ComplexType":"Error","ItemType":"complex","Name":"Errors","ObjectType":"content.Parameter","Path":"$","Type":"collection"}],"PlatformType":"NetAppActiveIqUnifiedManager","SharedScope":"shared","Types":[{"Name":"Error","ObjectType":"content.ComplexType","Parameters":[{"ItemType":"simple","Name":"Msg","ObjectType":"content.Parameter","Path":"$.error.message","Type":"simple"},{"ItemType":"simple","Name":"ErrorCode","ObjectType":"content.Parameter","Path":"$.error.code","Type":"simple"}]}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/ErrorResponseHandlers","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetClusterUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID successful.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID failed.","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Uuid","ObjectType":"content.Parameter","Path":"$.Uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/storage/NetAppClusters/{{.global.task.input.StorageDevice.Moid}}?$select=Uuid"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppLunDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppLunDetails.output.HttpStatusCode 400) (le .global.GetNetAppLunDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppLunDetails.output.Errors}}{{$err := (index .global.GetNetAppLunDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppLunDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppLunDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppLunDetails.output.Errors}}{{$err := (index .global.GetNetAppLunDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppLunDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppLunDetails.output.HttpStatusCode 501) (le .global.GetNetAppLunDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppLunDetails.output.Errors}}{{$err := (index .global.GetNetAppLunDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppLunDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ and (eq .global.GetNetAppLunDetails.output.HttpStatusCode 200) (not .global.GetNetAppLunDetails.output.LunUuid) }}","Message":"No LUN named '{{.global.task.input.LunPath}}' found on storage virtual machine named '{{.global.task.input.StorageVirtualMachineName}}'.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppLunDetails.output.HttpStatusCode 200)}}","Message":"LUN details retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"LunUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeUuid","ObjectType":"content.Parameter","Path":"$.records[0].location.volume.uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"iGroupUuid","ObjectType":"content.Parameter","Path":"$.records[0].lun_maps[0].igroup.uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"iGroupName","ObjectType":"content.Parameter","Path":"$.records[0].lun_maps[0].igroup.name","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/luns?name={{.global.task.input.LunPath}}&svm.name={{.global.task.input.StorageVirtualMachineName}}&fields=location,lun_maps&return_timeout=59"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppLunCountByVolume","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppLunCountByVolume.output.HttpStatusCode 400) (le .global.GetNetAppLunCountByVolume.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppLunCountByVolume.output.Errors}}{{$err := (index .global.GetNetAppLunCountByVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppLunCountByVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppLunCountByVolume.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppLunCountByVolume.output.Errors}}{{$err := (index .global.GetNetAppLunCountByVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppLunCountByVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppLunCountByVolume.output.HttpStatusCode 501) (le .global.GetNetAppLunCountByVolume.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppLunCountByVolume.output.Errors}}{{$err := (index .global.GetNetAppLunCountByVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppLunCountByVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.GetNetAppLunCountByVolume.output.HttpStatusCode 200)}}","Message":"LUN count retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"LunCount","ObjectType":"content.Parameter","Path":"$.num_records","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/luns?location.volume.uuid={{.global.GetNetAppLunDetails.output.VolumeUuid}}&return_records=false&return_timeout=59"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppVolumeDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 400) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 501) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ and (eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 200) (not .global.GetNetAppVolumeDetails.output.VolumeUuid) }}","Message":"No volume for '{{.global.task.input.LunPath}}' found.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ (eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 200) }}","Message":"Volume details retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeUuid","ObjectType":"content.Parameter","Path":"$.uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AggregateUuid","ObjectType":"content.Parameter","Path":"$.aggregates[0].uuid","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{if or (ne .global.GetNetAppLunCountByVolume.output.LunCount \"1\") (not (.global.task.input.RemoveVolumeFlag))}} true {{end}}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes/{{.global.GetNetAppLunDetails.output.VolumeUuid}}?fields=aggregates&return_timeout=59"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppiGroupDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppiGroupDetails.output.HttpStatusCode 400) (le .global.GetNetAppiGroupDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppiGroupDetails.output.Errors}}{{$err := (index .global.GetNetAppiGroupDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppiGroupDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppiGroupDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppiGroupDetails.output.Errors}}{{$err := (index .global.GetNetAppiGroupDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppiGroupDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppiGroupDetails.output.HttpStatusCode 501) (le .global.GetNetAppiGroupDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppiGroupDetails.output.Errors}}{{$err := (index .global.GetNetAppiGroupDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppiGroupDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.GetNetAppiGroupDetails.output.HttpStatusCode 200)}}","Message":"Initiator group details retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"iGroupUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"iGroupName","ObjectType":"content.Parameter","Path":"$.records[0].name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DeleteOnUnmap","ObjectType":"content.Parameter","Path":"$.records[0].delete_on_unmap","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{if eq .global.GetNetAppLunDetails.output.iGroupName \"\"}} true {{end}}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/san/igroups?name={{.global.GetNetAppLunDetails.output.iGroupName}}&fields=uuid,name,delete_on_unmap&return_timeout=59"},{"Body":"{}","ContentType":"json","EndpointRequestType":"Internal","Method":"DELETE","Name":"RemoveLun","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.RemoveLun.output.HttpStatusCode 400) (le .global.RemoveLun.output.HttpStatusCode 499)}}","Message":"{{if .global.RemoveLun.output.Errors}}{{$err := (index .global.RemoveLun.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveLun.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.RemoveLun.output.HttpStatusCode 500)}}","Message":"{{if .global.RemoveLun.output.Errors}}{{$err := (index .global.RemoveLun.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveLun.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.RemoveLun.output.HttpStatusCode 501) (le .global.RemoveLun.output.HttpStatusCode 599)}}","Message":"{{if .global.RemoveLun.output.Errors}}{{$err := (index .global.RemoveLun.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveLun.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.RemoveLun.output.HttpStatusCode 200)}}","Message":"LUN removed successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/luns/{{.global.GetNetAppLunDetails.output.LunUuid}}?allow_delete_while_mapped={{.global.task.input.RemoveMappedLunFlag}}"},{"Body":"{}","ContentType":"json","EndpointRequestType":"Internal","Method":"DELETE","Name":"RemoveVolume","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.RemoveVolume.output.HttpStatusCode 400) (le .global.RemoveVolume.output.HttpStatusCode 499)}}","Message":"{{if .global.RemoveVolume.output.Errors}}{{$err := (index .global.RemoveVolume.output.Errors 0)}}{{if (index $err \"\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.RemoveVolume.output.HttpStatusCode 500)}}","Message":"{{if .global.RemoveVolume.output.Errors}}{{$err := (index .global.RemoveVolume.output.Errors 0)}}{{if (index $err \"\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.RemoveVolume.output.HttpStatusCode 501) (le .global.RemoveVolume.output.HttpStatusCode 599)}}","Message":"{{if .global.RemoveVolume.output.Errors}}{{$err := (index .global.RemoveVolume.output.Errors 0)}}{{if (index $err \"\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.RemoveVolume.output.HttpStatusCode 202) }}","Message":"Job ID created successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobUuid","ObjectType":"content.Parameter","Path":"$.job.uuid","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{if or (ne .global.GetNetAppLunCountByVolume.output.LunCount \"1\") (not (.global.task.input.RemoveVolumeFlag))}} true {{end}}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes/{{.global.GetNetAppVolumeDetails.output.VolumeUuid}}?return_timeout=59"},{"Body":"{}","ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetJobDetail","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 400) (le .global.GetJobDetail.output.HttpStatusCode 499)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetJobDetail.output.HttpStatusCode 500)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 501) (le .global.GetJobDetail.output.HttpStatusCode 599)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Failed\"{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"paused\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Paused\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"queued\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Queued\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"running\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Running\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"success\" }}","Message":"Volume removed successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobState","ObjectType":"content.Parameter","Path":"$.state","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"CompletedTime","ObjectType":"content.Parameter","Path":"$.end_time","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobMessage","ObjectType":"content.Parameter","Path":"$.message","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{if or (ne .global.GetNetAppLunCountByVolume.output.LunCount \"1\") (not (.global.task.input.RemoveVolumeFlag))}} true {{end}}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/cluster/jobs/{{.global.RemoveVolume.output.JobUuid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppLunCountByIgroup","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppLunCountByIgroup.output.HttpStatusCode 400) (le .global.GetNetAppLunCountByIgroup.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppLunCountByIgroup.output.Errors}}{{$err := (index .global.GetNetAppLunCountByIgroup.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppLunCountByIgroup.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppLunCountByIgroup.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppLunCountByIgroup.output.Errors}}{{$err := (index .global.GetNetAppLunCountByIgroup.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppLunCountByIgroup.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppLunCountByIgroup.output.HttpStatusCode 501) (le .global.GetNetAppLunCountByIgroup.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppLunCountByIgroup.output.Errors}}{{$err := (index .global.GetNetAppLunCountByIgroup.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppLunCountByIgroup.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.GetNetAppLunCountByIgroup.output.HttpStatusCode 200)}}","Message":"LUN count retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"LunCount","ObjectType":"content.Parameter","Path":"$.num_records","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{if eq .global.GetNetAppLunDetails.output.iGroupName \"\"}} true {{end}}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/luns?lun_maps.igroup.name={{.global.GetNetAppLunDetails.output.iGroupName}}&return_records=false&return_timeout=59"},{"Body":"{\"Type\":\"storage.NetAppCluster\",\"Queries\": [{\"Uuid\": \"{{.global.GetClusterUuid.output.Uuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateClusterInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateClusterInventory.output.HttpStatusCode 200}}","Message":"Updated cluster after volume removal.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateClusterInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateClusterInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","SkipOnCondition":"{{if or (ne .global.GetNetAppLunCountByVolume.output.LunCount \"1\") (not (.global.task.input.RemoveVolumeFlag))}} true {{end}}","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppAggregate\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppVolumeDetails.output.AggregateUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateAggregateInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateAggregateInventory.output.HttpStatusCode 200}}","Message":"Updated aggregate after volume removal.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateAggregateInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateAggregateInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","SkipOnCondition":"{{if or (ne .global.GetNetAppLunCountByVolume.output.LunCount \"1\") (not (.global.task.input.RemoveVolumeFlag))}} true {{end}}","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppVolume\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppVolumeDetails.output.VolumeUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateVolumeInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"Volume removed successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateVolumeInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","SkipOnCondition":"{{if or (ne .global.GetNetAppLunCountByVolume.output.LunCount \"1\") (not (.global.task.input.RemoveVolumeFlag))}} true {{end}}","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppLun\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppLunDetails.output.LunUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateInventoryLun","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateInventoryLun.output.HttpStatusCode 200}}","Message":"LUN{{if and (eq .global.GetNetAppLunCountByVolume.output.LunCount \"1\") (.global.task.input.RemoveVolumeFlag)}} and volume{{end}} removed successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateInventoryLun.output.HttpStatusCode 200}}","Message":"{{.global.UpdateInventoryLun.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppInitiatorGroup\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppLunDetails.output.iGroupUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateInventoryIgroup","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateInventoryIgroup.output.HttpStatusCode 200}}","Message":"{{ $igroup_deleted := (and (eq .global.GetNetAppLunCountByIgroup.output.LunCount \"0\") (.global.GetNetAppiGroupDetails.output.DeleteOnUnmap)) }}Initiator group {{if $igroup_deleted}}removed{{else}}updated{{end}} successfully.","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ne .global.UpdateInventoryIgroup.output.HttpStatusCode 200}}","Message":"{{.global.UpdateInventoryIgroup.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","SkipOnCondition":"{{if eq .global.GetNetAppLunDetails.output.iGroupUuid \"\" }} true {{end}}","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppLunMap\",\"Queries\": [{\"LunUuid\":\"{{.global.GetNetAppLunDetails.output.LunUuid}}\", \"IgroupUuid\": \"{{.global.GetNetAppLunDetails.output.iGroupUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateInventoryLunMap","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateInventoryLunMap.output.HttpStatusCode 200}}","Message":"{{ $vol_deleted := (and (eq .global.GetNetAppLunCountByVolume.output.LunCount \"1\") (.global.task.input.RemoveVolumeFlag)) }}{{ $igroup_deleted := (and (eq .global.GetNetAppLunCountByIgroup.output.LunCount \"0\") (.global.GetNetAppiGroupDetails.output.DeleteOnUnmap)) }}LUN{{if $vol_deleted }}{{if $igroup_deleted}}, volume,{{else}} and volume{{end}}{{end}}{{if $igroup_deleted}} and initator group{{end}} removed successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateInventoryLunMap.output.HttpStatusCode 200}}","Message":"{{.global.UpdateInventoryLunMap.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","SkipOnCondition":"{{if eq .global.GetNetAppLunDetails.output.iGroupUuid \"\" }} true {{end}}","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.NetAppCluster"}},"Description":"Remove a LUN.","ErrorResponseHandler":{"ObjectType":"workflow.ErrorResponseHandler","Selector":"Name eq \"NetAppApiErrorResponseHandler\""},"Name":"RemoveNetAppSmartLun","ObjectType":"workflow.BatchApiExecutor","Output":{"IgroupName":"{{.global.GetNetAppLunDetails.output.iGroupName}}","LunPath":"{{.global.task.input.LunPath}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{if ne .global.task.input.StorageDevice.ObjectType \"storage.NetAppCluster\"}} true {{end}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveNetAppSmartLun\" and Version eq 3"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetClusterUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID successful.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID failed.","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Uuid","ObjectType":"content.Parameter","Path":"$.Uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/storage/NetAppClusters/{{.global.task.input.StorageDevice.Moid}}?$select=Uuid"},{"Body":"{\"name\": \"{{.global.task.input.LunName}}\", \"smart_container\": true, \"svm\": {\"name\": \"{{.global.task.input.StorageVirtualMachineName}}\"},  \"san\": { \"protection_type\": { \"local_policy\": {{if .global.task.input.LocalSnapshotCopies }} \"default\" {{else}} \"none\" {{end}} }, \"os_type\": \"{{.global.task.input.LunOperatingSystemFormat}}\", \"application_components\":[{ \"name\": \"{{.global.task.input.LunName}}\", \"total_size\": \"{{.global.task.input.LunCapacity.VolumeSize}}{{.global.task.input.LunCapacity.VolumeUnit}}\", \"lun_count\": \"1\", {{if index .global.task.input.InitiatorGroupOptions \"ExistingIgroupName\"}} \"igroup_name\": \"{{.global.task.input.InitiatorGroupOptions.ExistingIgroupName}}\", {{else if index .global.task.input.InitiatorGroupOptions \"NewIgroupName\"}} \"igroup_name\": \"{{.global.task.input.InitiatorGroupOptions.NewIgroupName}}\", {{end}} {{if eq .global.task.input.PerformanceServiceLevel \"none\"}} \"qos\": {\"policy\": {\"name\": \"none\"}} {{else}} \"storage_service\": {\"name\": \"{{.global.task.input.PerformanceServiceLevel}}\"} {{end}} }] {{if and (index .global.task.input.InitiatorGroupOptions \"NewIgroupName\") (not (index .global.task.input.InitiatorGroupOptions \"ExistingIgroupName\")) }}, \"new_igroups\":[{ \"name\": \"{{.global.task.input.InitiatorGroupOptions.NewIgroupName}}\", {{$InitiatorList:= AsSlice .global.task.input.InitiatorGroupOptions.Initiators}} \"initiators\": [{{range $index, $initiator:= $InitiatorList}} {{if $index}},{{end}}\"{{$initiator}}\" {{end}}], \"protocol\": \"{{.global.task.input.InitiatorGroupOptions.Protocol}}\", \"os_type\": \"{{.global.task.input.InitiatorGroupOptions.OperatingSystem}}\"}] {{end}} }}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewCreateLun","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.NewCreateLun.output.HttpStatusCode 400) (le .global.NewCreateLun.output.HttpStatusCode 499)}}","Message":"{{if .global.NewCreateLun.output.Errors}}{{$err := (index .global.NewCreateLun.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewCreateLun.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.NewCreateLun.output.HttpStatusCode 500)}}","Message":"{{if .global.NewCreateLun.output.Errors}}{{$err := (index .global.NewCreateLun.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewCreateLun.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.NewCreateLun.output.HttpStatusCode 501) (le .global.NewCreateLun.output.HttpStatusCode 599)}}","Message":"{{if .global.NewCreateLun.output.Errors}}{{$err := (index .global.NewCreateLun.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewCreateLun.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.NewCreateLun.output.HttpStatusCode 202)}}","Message":"Job ID created successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobUuid","ObjectType":"content.Parameter","Path":"$.job.uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/application/applications?return_timeout=59"},{"Body":"{}","ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetJobDetail","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 400)  (le .global.GetJobDetail.output.HttpStatusCode 499)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetJobDetail.output.HttpStatusCode 500)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 501)  (le .global.GetJobDetail.output.HttpStatusCode 599)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Failed\"{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"paused\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Paused\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"queued\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Queued\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"running\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Running\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"success\" }}","Message":"Job status received successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobState","ObjectType":"content.Parameter","Path":"$.state","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"CompletedTime","ObjectType":"content.Parameter","Path":"$.end_time","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobMessage","ObjectType":"content.Parameter","Path":"$.message","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/cluster/jobs/{{.global.NewCreateLun.output.JobUuid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppLunDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppLunDetails.output.HttpStatusCode 400) (le .global.GetNetAppLunDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppLunDetails.output.Errors}}{{$err := (index .global.GetNetAppLunDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppLunDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppLunDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppLunDetails.output.Errors}}{{$err := (index .global.GetNetAppLunDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppLunDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppLunDetails.output.HttpStatusCode 501) (le .global.GetNetAppLunDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppLunDetails.output.Errors}}{{$err := (index .global.GetNetAppLunDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppLunDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppLunDetails.output.HttpStatusCode 200) }}","Message":"LUN created successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"LunPath","ObjectType":"content.Parameter","Path":"$.records[0].name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"LunUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NaaId","ObjectType":"content.Parameter","Path":"$.records[0].serial_number","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeName","ObjectType":"content.Parameter","Path":"$.records[0].location.volume.name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeUuid","ObjectType":"content.Parameter","Path":"$.records[0].location.volume.uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"iGroupUuid","ObjectType":"content.Parameter","Path":"$.records[0].lun_maps[0].igroup.uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"InitiatorGroupName","ObjectType":"content.Parameter","Path":"$.records[0].lun_maps[0].igroup.name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Lun","ObjectType":"content.Parameter","Path":"$.records[0].lun_maps[0].logical_unit_number","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/luns?name=/vol/{{.global.task.input.LunName}}/{{.global.task.input.LunName}}&svm.name={{.global.task.input.StorageVirtualMachineName}}&fields=name,uuid,serial_number,location,lun_maps"},{"Body":"{\"Type\":\"storage.NetAppVolume\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppLunDetails.output.VolumeUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateVolumeInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"Volume created successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateVolumeInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppInitiatorGroup\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppLunDetails.output.iGroupUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateInitiatorGroupInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateInitiatorGroupInventory.output.HttpStatusCode 200}}","Message":"Initiator group created successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateInitiatorGroupInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateInitiatorGroupInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppLun\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppLunDetails.output.LunUuid}}\",  \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateLunInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateLunInventory.output.HttpStatusCode 200}}","Message":"LUN created successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateLunInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateLunInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppLunMap\",\"Queries\": [{\"LunUuid\":\"{{.global.GetNetAppLunDetails.output.LunUuid}}\", \"IgroupUuid\": \"{{.global.GetNetAppLunDetails.output.iGroupUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateLunMapInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateLunMapInventory.output.HttpStatusCode 200}}","Message":"LUN created successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateLunMapInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateLunMapInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","StartDelay":10,"TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.NetAppCluster"}},"Description":"New NetApp Smart LUN","ErrorResponseHandler":{"ObjectType":"workflow.ErrorResponseHandler","Selector":"Name eq \"NetAppApiErrorResponseHandler\""},"Name":"NewNetAppSmartLun","ObjectType":"workflow.BatchApiExecutor","Output":{"IgroupName":"{{.global.GetNetAppLunDetails.output.InitiatorGroupName}}","LUN":"{{.global.GetNetAppLunDetails.output.Lun}}","LunCapacity":"{{.global.task.input.LunCapacity | ToJson}}","LunPath":"{{.global.GetNetAppLunDetails.output.LunPath}}","NaaId":"600a0980{{.global.GetNetAppLunDetails.output.NaaId | printf \"%x\"}}","RemoveMappedLunFlag":"true","RemoveVolumeFlag":"true","VolumeName":"{{.global.GetNetAppLunDetails.output.VolumeName}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{if ne .global.task.input.StorageDevice.ObjectType \"storage.NetAppCluster\"}} true {{end}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewNetAppSmartLun\" and Version eq 4"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Remove a VMFS datastore from Vmware hypervisor.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveHypervisorDatastore\" and Version eq 2"},"Label":"Remove Hypervisor Datastore","Name":"RemoveHypervisorDatastoreImpl","ObjectType":"workflow.TaskDefinition","Properties":{"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore is hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore is hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the datastore to be removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Disk associated with the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk name","Name":"NAAId","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"LUN number of the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Number","Name":"LUNNumber","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":150,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":2},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Create a new VMFS/NFS Datastore on Vmware hypervisor.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewHypervisorDatastore\" and Version eq 1"},"Label":"New Hypervisor Datastore","Name":"NewHypervisorDatastoreVmwareImpl","ObjectType":"workflow.TaskDefinition","Properties":{"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name for the new datastore, limited to 42 characters.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints","Regex":"^.{1,42}$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type and version of the new datastore. Minimum datastore size: VMFS 5 - 1.3GB, VMFS 6 - 2GB. Kerberos support is enabled in NFS4.1 only.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Type of Datastore","Name":"DatastoreVersion","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreVersionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the newly created datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"VMFS Version","Name":"VMFSVersion","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore Type","Name":"DatastoreType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Disk identity of the newly created datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk","Name":"Disk","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":300,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"Batch":[{"Body":"{ \"Datastore\":\"{{.global.task.input.Datastore}}\",  \"Cluster\":{{ if .global.task.input.Cluster}}\"{{.global.task.input.Cluster}}\",{{else}}\"\",{{end}}   \"Host\":{{ if .global.task.input.Host}}\"{{.global.task.input.Host}}\",{{else}}\"\",{{end}}  \"Datacenter\":\"{{.global.task.input.Datacenter}}\" }","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"RemoveHypervisorDatastoreImpl","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (eq .global.RemoveHypervisorDatastoreImpl.output.HttpStatusCode 400) ( or (ContainsString .global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg \"Datastore\") (ContainsString .global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg \"datastore\") ) (ContainsString .global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg \"not found\") }}","Message":"Datastore delete request marked successful. Message: {{.global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg}}. ","ObjectType":"workflow.Outcome"},{"Condition":"{{(ne .global.RemoveHypervisorDatastoreImpl.output.HttpStatusCode 200)}}","Error":true,"Message":"Failed to remove datastore. Message: {{.global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Datastore '{{.global.RemoveHypervisorDatastoreImpl.output.DatastoreName}}' removed successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datastore","ObjectType":"content.Parameter","Path":"$.Datastore","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreName","ObjectType":"content.Parameter","Path":"$.DatastoreName","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NAAId","ObjectType":"content.Parameter","Path":"$.NAAId","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"LUNNumber","ObjectType":"content.Parameter","Path":"$.LUNNumber","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Timeout":120,"Url":"/task/Execute/RemoveDatastore"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Remove VMFS or NFS datastore from Vmware hypervisor.","Name":"RemoveHypervisorDatastoreImpl","ObjectType":"workflow.BatchApiExecutor","Output":{"Datastore":"{{.global.RemoveHypervisorDatastoreImpl.output.Datastore}}","LUNNumber":"{{.global.RemoveHypervisorDatastoreImpl.output.LUNNumber}}","NAAId":"{{.global.RemoveHypervisorDatastoreImpl.output.NAAId}}"},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveHypervisorDatastoreImpl\" and Version eq 2"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"Body":"{ \"Datacenter\":\"{{.global.task.input.Datacenter}}\",\"Datastore\":\"{{.global.task.input.Datastore}}\",\"Disk\":{{ if .global.task.input.DatastoreVersion.Disk}}\"{{.global.task.input.DatastoreVersion.Disk}}\",{{else}}\"\",{{end}} \"Cluster\":{{ if .global.task.input.Cluster}}\"{{.global.task.input.Cluster}}\",{{else}}\"\",{{end}}   \"Host\":{{ if .global.task.input.Host}}\"{{.global.task.input.Host}}\",{{else}}\"\",{{end}} \"VMFSVersion\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\", \"DatastoreType\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewHypervisorDatastoreVmwareImplVMFS","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.NewHypervisorDatastoreVmwareImplVMFS.output.HttpStatusCode 200)}}","Error":true,"Message":"Failed to create datastore. Message: {{.global.NewHypervisorDatastoreVmwareImplVMFS.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Datastore '{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.DatastoreName}}' created successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datastore","ObjectType":"content.Parameter","Path":"$.Datastore","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datacenter","ObjectType":"content.Parameter","Path":"$.Datacenter","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VMFSVersion","ObjectType":"content.Parameter","Path":"$.VMFSVersion","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreType","ObjectType":"content.Parameter","Path":"$.DatastoreType","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Disk","ObjectType":"content.Parameter","Path":"$.Disk","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Host","ObjectType":"content.Parameter","Path":"$.Host","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Cluster","ObjectType":"content.Parameter","Path":"$.Cluster","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreName","ObjectType":"content.Parameter","Path":"$.DatastoreName","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{and (ne .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\")  (ne .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\") }}","TargetType":"Endpoint","Timeout":270,"Url":"/task/Execute/NewVmfsDatastore"},{"Body":"{ \"Datacenter\":\"{{.global.task.input.Datacenter}}\",\"Datastore\":\"{{.global.task.input.Datastore}}\",\"Cluster\":{{ if .global.task.input.Cluster}}\"{{.global.task.input.Cluster}}\",{{else}}\"\",{{end}}   \"Host\":{{ if .global.task.input.Host}}\"{{.global.task.input.Host}}\",{{else}}\"\",{{end}} \"VMFSVersion\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\", \"DatastoreType\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\",\"RemotePath\":{{if .global.task.input.DatastoreVersion.RemotePath}}\"{{.global.task.input.DatastoreVersion.RemotePath}}\", {{else}} \"\",{{end}} \"RemoteHostNames\":{{.global.task.input.DatastoreVersion.RemoteHostNames | ToJson}}, \"AccessMode\":{{if .global.task.input.DatastoreVersion.AccessMode}}\"{{.global.task.input.DatastoreVersion.AccessMode}}\" {{else}}\"\"{{end}} }","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewHypervisorDatastoreVmwareImplNFS","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.NewHypervisorDatastoreVmwareImplNFS.output.HttpStatusCode 200)}}","Error":true,"Message":"{{.global.NewHypervisorDatastoreVmwareImplNFS.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Datastore '{{.global.NewHypervisorDatastoreVmwareImplNFS.output.DatastoreName}}' created successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datastore","ObjectType":"content.Parameter","Path":"$.Datastore","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datacenter","ObjectType":"content.Parameter","Path":"$.Datacenter","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VMFSVersion","ObjectType":"content.Parameter","Path":"$.VMFSVersion","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreType","ObjectType":"content.Parameter","Path":"$.DatastoreType","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Disk","ObjectType":"content.Parameter","Path":"$.Disk","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Host","ObjectType":"content.Parameter","Path":"$.Host","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreName","ObjectType":"content.Parameter","Path":"$.DatastoreName","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Cluster","ObjectType":"content.Parameter","Path":"$.Cluster","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{ne .global.task.input.DatastoreVersion.VMFSVersion \"NFS\"}}","TargetType":"Endpoint","Timeout":270,"Url":"/task/Execute/NewVmfsDatastore"},{"Body":"{ \"Datacenter\":\"{{.global.task.input.Datacenter}}\",\"Datastore\":\"{{.global.task.input.Datastore}}\",\"Cluster\":{{ if .global.task.input.Cluster}}\"{{.global.task.input.Cluster}}\",{{else}}\"\",{{end}}   \"Host\":{{ if .global.task.input.Host}}\"{{.global.task.input.Host}}\",{{else}}\"\",{{end}} \"VMFSVersion\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\", \"DatastoreType\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\",\"RemotePath\":{{if .global.task.input.DatastoreVersion.RemotePath}}\"{{.global.task.input.DatastoreVersion.RemotePath}}\", {{else}} \"\",{{end}} \"RemoteHostNames\":{{.global.task.input.DatastoreVersion.RemoteHostNames | ToJson}}, \"AccessMode\":{{if .global.task.input.DatastoreVersion.AccessMode}}\"{{.global.task.input.DatastoreVersion.AccessMode}}\", {{else}}\"\",{{end}} \"SecurityType\":{{if .global.task.input.DatastoreVersion.SecurityType}}\"{{.global.task.input.DatastoreVersion.SecurityType}}\" {{else}} \"\"{{end}} }","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewHypervisorDatastoreVmwareImplNFS41","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.NewHypervisorDatastoreVmwareImplNFS41.output.HttpStatusCode 200)}}","Error":true,"Message":"{{.global.NewHypervisorDatastoreVmwareImplNFS41.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Datastore '{{.global.NewHypervisorDatastoreVmwareImplNFS41.output.DatastoreName}}' created successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datastore","ObjectType":"content.Parameter","Path":"$.Datastore","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datacenter","ObjectType":"content.Parameter","Path":"$.Datacenter","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VMFSVersion","ObjectType":"content.Parameter","Path":"$.VMFSVersion","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreType","ObjectType":"content.Parameter","Path":"$.DatastoreType","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Disk","ObjectType":"content.Parameter","Path":"$.Disk","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Host","ObjectType":"content.Parameter","Path":"$.Host","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Cluster","ObjectType":"content.Parameter","Path":"$.Cluster","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreName","ObjectType":"content.Parameter","Path":"$.DatastoreName","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{ne .global.task.input.DatastoreVersion.VMFSVersion \"NFS41\"}}","TargetType":"Endpoint","Timeout":270,"Url":"/task/Execute/NewVmfsDatastore"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Create a new VMFS/NFS Datastore on Vmware hypervisor.","Name":"NewHypervisorDatastoreVmwareImpl","ObjectType":"workflow.BatchApiExecutor","Output":{"Cluster":"{{if .global.task.input.Cluster}}{{.global.task.input.Cluster}}{{end}}","Datacenter":"{{.global.task.input.Datacenter}}","Datastore":"{{if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.Datastore}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.Datastore}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"NFS41\"}}{{.global.NewHypervisorDatastoreVmwareImplNFS41.output.Datastore}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"NFS\"}}{{.global.NewHypervisorDatastoreVmwareImplNFS.output.Datastore}}{{end}}","DatastoreType":"{{if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.DatastoreType}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.DatastoreType}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"NFS41\"}}{{.global.NewHypervisorDatastoreVmwareImplNFS41.output.DatastoreType}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"NFS\"}}{{.global.NewHypervisorDatastoreVmwareImplNFS.output.DatastoreType}}{{end}}","Disk":"{{if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.Disk}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.Disk}}{{end}}","Host":"{{if .global.task.input.Host}}{{.global.task.input.Host}}{{end}}","VMFSVersion":"{{if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\"}}{{.global.task.input.DatastoreVersion.VMFSVersion}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\"}}{{.global.task.input.DatastoreVersion.VMFSVersion}}{{end}}"},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewHypervisorDatastoreVmwareImpl\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"}]